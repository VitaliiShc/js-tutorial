// // üí° Task 1
// // –ó–∞–ø–∏—à–∏ —É–º–æ–≤—É –≤ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó if —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —Ñ—É–Ω–∫—Ü—ñ—è –ø—Ä–∞—Ü—é–≤–∞–ª–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.
// //
// // function checkAge(age) {
// // if () { // Change this line
// //  return "You are an adult";
// // }
// // return "You are a minor";
// // }

// function checkAge(age) {
// if (age >= 18) {
//  return "You are an adult";
// }
// return "You are a minor";
// }
// console.log(checkAge(20));
// console.log(checkAge(8));
// console.log(checkAge(14));
// console.log(checkAge(38));

// // üí° Task 2
// // –ó–ê–î–ê–ß–ê: –ü–ï–†–ï–í–Ü–†–ö–ê –ü–ê–†–û–õ–Ø (–†–ê–ù–ù–Ñ –ü–û–í–ï–†–ù–ï–ù–ù–Ø)
// // –§—É–Ω–∫—Ü—ñ—è checkPassword –æ—Ç—Ä–∏–º—É—î –ø–∞—Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É –ø–∞—Ä–∞–º–µ—Ç—Ä password, –ø–µ—Ä–µ–≤—ñ—Ä—è—î –π–æ–≥–æ –Ω–∞ –∑–±—ñ–≥ –∑ –ø–∞—Ä–æ–ª–µ–º –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É –∑–º—ñ–Ω–Ω—ñ–π ADMIN_PASSWORD —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è.
// // –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É —Ñ—É–Ω–∫—Ü—ñ—ó checkPassword, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –ø–∞—Ç–µ—Ä–Ω ¬´—Ä–∞–Ω–Ω—î –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è¬ª:
// // –≤–∏–¥–∞–ª–∏ –∑–º—ñ–Ω–Ω—É message
// // –≤–∏–¥–∞–ª–∏ else
// // –∫–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ —Ç–∞–∫ —Å–∞–º–æ, —è–∫ —ñ –¥–æ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó

// // function checkPassword(password) {
// //   const ADMIN_PASSWORD = 'jqueryismyjam';

// //   let message;

// //   if (password === ADMIN_PASSWORD) {
// //     message = 'Welcome!';
// //   } else {
// //     message = 'Access denied, wrong password!';
// //   }

// //   return message;

// // }

// function checkPassword(password) {
//   const ADMIN_PASSWORD = 'jqueryismyjam';
//   // Change code below this line

//   if (password === ADMIN_PASSWORD) {
//     return 'Welcome!';
//   }
//     return 'Access denied, wrong password!';
//   // Change code above this line
// }

// console.log(checkPassword("mangohackzor")) //  "Access denied, wrong password!"
// console.log(checkPassword("polyhax")) //  "Access denied, wrong password!"
// console.log(checkPassword("jqueryismyjam")) //  "Welcome!"

// // üí° Task 3
// // –§—É–Ω–∫—Ü—ñ—è checkStorage –ø–µ—Ä–µ–≤—ñ—Ä—è—î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –í–æ–Ω–∞ –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –±—É–¥—É—Ç—å –∑–∞–¥–∞–≤–∞—Ç–∏—Å—è –ø—ñ–¥ —á–∞—Å —ó—ó –≤–∏–∫–ª–∏–∫—É.

// // available - –¥–æ—Å—Ç—É–ø–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–∞ —Å–∫–ª–∞–¥—ñ
// // ordered - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–∏—Ü—å —Ç–æ–≤–∞—Ä—É –≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ
// // –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É —Ñ—É–Ω–∫—Ü—ñ—ó checkStorage, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –ø–∞—Ç–µ—Ä–Ω ¬´—Ä–∞–Ω–Ω—î –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è¬ª.

// // function checkStorage(available, ordered) {
// //   // Change code below this line
// //   let message;

// //   if (ordered === 0) {
// //     message = 'Your order is empty!';
// //   } else if (ordered > available) {
// //     message = 'Your order is too large, not enough goods in stock!';
// //   } else {
// //     message = 'The order is accepted, our manager will contact you';
// //   }

// //   return message;
// //   // Change code above this line
// // }

// function checkStorage(available, ordered) {
//   if (ordered === 0) {
//     return 'Your order is empty!';
//   }
//   if (ordered > available) {
//     return 'Your order is too large, not enough goods in stock!';
//   }
//   return 'The order is accepted, our manager will contact you';
// }

// console.log(checkStorage(100, 50)); //  "The order is accepted, our manager will contact you"
// console.log(checkStorage(100, 130)); //  "Your order is too large, not enough goods in stock!"
// console.log(checkStorage(70, 0)); //  "Your order is empty!"
// console.log(checkStorage(200, 20)); //  "The order is accepted, our manager will contact you"
// console.log(checkStorage(200, 250)); //  "Your order is too large, not enough goods in stock!"
// console.log(checkStorage(150, 0)); //  "Your order is empty!"

// // üí° Task 4
// // –û–≥–æ–ª–æ—Å–∏ –∑–º—ñ–Ω–Ω—É fruits —ñ –ø—Ä–∏—Å–≤–æ–π —ó–π –º–∞—Å–∏–≤ —Ñ—Ä—É–∫—Ç—ñ–≤ - —Ä—è–¥–∫—ñ–≤ "apple", "plum", "pear" —ñ "orange".
// const fruits = ['apple', 'plum', 'pear', 'orange'];
// // –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó fruits - —Ü–µ –º–∞—Å–∏–≤ ["apple", "plum", "pear", "orange"]

// // üí° Task 5
// // –û–≥–æ–ª–æ—Å–∏ —Ç—Ä–∏ –∑–º—ñ–Ω–Ω—ñ —ñ –ø—Ä–∏—Å–≤–æ–π –∫–æ–∂–Ω—ñ–π –∑ –Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–Ω—è, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –Ω–æ—Ç–∞—Ü—ñ—é –∫–≤–∞–¥—Ä–∞—Ç–Ω–∏—Ö –¥—É–∂–æ–∫.
// // –Ü–º'—è –∑–º—ñ–Ω–Ω–æ—ó	–ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó
// // firstElement	–ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É
// // secondElement	–¥—Ä—É–≥–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É
// // lastElement	–æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É
// const fruits = ["apple", "plum", "pear", "orange"];
// const firstElement = fruits[0];
// const secondElement = fruits[1];
// const lastElement = fruits[fruits.length - 1];

// console.log(firstElement);
// console.log(secondElement);
// console.log(lastElement);

// // üí° Task 6
// // –í–∏–∫–æ–Ω–∞–π –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∑ —ñ–Ω–¥–µ–∫—Å–∞–º–∏ 1 —ñ 3. –ó–∞–º—ñ–Ω–∏ "plum" –Ω–∞ "peach", –∞ "orange" –Ω–∞ "banana".
// // const fruits = ["apple", "plum", "pear", "orange"];

// const fruits = ["apple", "plum", "pear", "orange"];
// fruits[1] = 'peach';
// fruits[3] = 'banana';

// console.log(fruits);

// // üí° Task 7
// // –û–≥–æ–ª–æ—Å–∏ –∑–º—ñ–Ω–Ω—É fruitsArrayLength —ñ –ø—Ä–∏—Å–≤–æ–π —ó–π –¥–æ–≤–∂–∏–Ω—É –º–∞—Å–∏–≤—É fruits, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å length.
// // const fruits = ["apple", "peach", "pear", "banana"];

// const fruits = ["apple", "peach", "pear", "banana"];
// const fruitsArrayLength = fruits.length;

// console.log(fruitsArrayLength);

// // üí° Task 8
// // –û–≥–æ–ª–æ—Å–∏ –¥–≤—ñ –∑–º—ñ–Ω—ñ:
// // –Ü–º'—è –∑–º—ñ–Ω–Ω–æ—ó	–û—á—ñ–∫—É–≤–∞–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
// // lastElementIndex	- –Ü–Ω–¥–µ–∫—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É fruits —á–µ—Ä–µ–∑ –¥–æ–≤–∂–∏–Ω–∞_–º–∞—Å–∏–≤—É - 1
// // lastElement	- –ó–Ω–∞—á–µ–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É
// const fruits = ["apple", "peach", "pear", "banana"];
// const lastElementIndex = fruits.length - 1;
// const lastElement = fruits[lastElementIndex]

// console.log(lastElementIndex);
// console.log(lastElement);

// // üí° Task 9
// // –ó–ê–î–ê–ß–ê: –ö–†–ê–ô–ù–Ü –ï–õ–ï–ú–ï–ù–¢–ò –ú–ê–°–ò–í–£
// // –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é getExtremeElements(array), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä array - –º–∞—Å–∏–≤ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏. –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –º–∞—Å–∏–≤ –∑ –¥–≤–æ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ - –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ array.

// function getExtremeElements(array) {
//     let extremeElements = []
//         extremeElements.unshift(array[0]);
//         extremeElements.push(array[array.length - 1]);

//     return extremeElements
// }

// console.log(getExtremeElements([1, 2, 3, 4, 5])) // [1, 5]
// console.log(getExtremeElements(["Earth", "Mars", "Venus"])) // ["Earth", "Venus"]
// console.log(getExtremeElements(["apple", "peach", "pear", "banana"])) // ["apple", "banana"]

// // üí° Task 10
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó splitMessage(message, delimiter) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ —É –∑–º—ñ–Ω–Ω—ñ–π words —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–¥—ñ–ª—É —Ä—è–¥–∫–∞ message –∑–∞ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–æ–º delimiter - –º–∞—Å–∏–≤ —Ä—è–¥–∫—ñ–≤.

// function splitMessage(message, delimiter) {
//   let words;
//   // Change code below this line
// words = message.split(delimiter);
//   // Change code above this line
//   return words;
// }

// console.log(splitMessage("Mango hurries to the train", " ")) // ["Mango", "hurries", "to", "the", "train"]
// console.log(splitMessage("Mango", "")) // ["M", "a", "n", "g", "o"]
// console.log(splitMessage("best_for_week", "_")) // ["best", "for", "week"]

// // üí° Task 11
// // –ó–ê–î–ê–ß–ê: –ì–†–ê–í–Ü–†–£–í–ê–ù–ù–Ø –ü–†–ò–ö–†–ê–°
// // –°–µ—Ä–≤—ñ—Å—É –≥—Ä–∞–≤—ñ—Ä—É–≤–∞–Ω–Ω—è –ø—Ä–∏–∫—Ä–∞—Å –ø–æ—Ç—Ä—ñ–±–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –± –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ä–∞—Ö—É–≤–∞–ª–∞ —Ü—ñ–Ω—É –≥—Ä–∞–≤—ñ—Ä—É–≤–∞–Ω–Ω—è, –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Å–ª—ñ–≤ —ñ —Ü—ñ–Ω–∏ –∑–∞ —Å–ª–æ–≤–æ.
// // –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è calculateEngravingPrice(message, pricePerWord). –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –ø—Ä–∏–π–º–∞—î —Ä—è–¥–æ–∫, —â–æ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è –∑—ñ —Å–ª—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω–∏—Ö –ª–∏—à–µ –ø—Ä–æ–±—ñ–ª–∞–º–∏ (–ø–∞—Ä–∞–º–µ—Ç—Ä message) —Ç–∞ —Ü—ñ–Ω—É –≥—Ä–∞–≤—ñ—Ä—É–≤–∞–Ω–Ω—è –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞ (–ø–∞—Ä–∞–º–µ—Ç—Ä pricePerWord).
// // –ù–∞–ø–∏—à–∏ —Ç—ñ–ª–æ —Ñ—É–Ω–∫—Ü—ñ—ó, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –≥—Ä–∞–≤—ñ—Ä—É–≤–∞–Ω–Ω—è —É—Å—ñ—Ö —Å–ª—ñ–≤ –≤ —Ä—è–¥–∫—É.

// function calculateEngravingPrice(message, pricePerWord) {
//    // Change code below this line

//     return message.split(' ').length * pricePerWord;

//    // Change code above this line
// }

// console.log(calculateEngravingPrice("JavaScript is in my blood", 10)) // 50
// console.log(calculateEngravingPrice("JavaScript is in my blood", 20)) // 100
// console.log(calculateEngravingPrice("Web-development is creative work", 40)) // 160
// console.log(calculateEngravingPrice("Web-development is creative work", 20)) // 80

// // üí° Task 12
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó makeStringFromArray(array, delimiter) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ —É –∑–º—ñ–Ω–Ω—ñ–π string —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑'—î–¥–Ω–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É array –∑ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–æ–º delimiter - —Ä—è–¥–æ–∫.

// function makeStringFromArray(array, delimiter) {
//   let string;
//   // Change code below this line
//   string = array.join(delimiter);

//   // Change code above this line
//   return string;
// }

// console.log(
//   makeStringFromArray(['Mango', 'hurries', 'to', 'the', 'train'], ' ')
// ); // "Mango hurries to the train"
// console.log(makeStringFromArray(['M', 'a', 'n', 'g', 'o'], '')); // "Mango"
// console.log(makeStringFromArray(['top', 'picks', 'for', 'you'], '_')); // "top_picks_for_you"

// // üí° Task 13
// // –ó–ê–î–ê–ß–ê: –ì–ï–ù–ï–†–ê–¢–û–† SLUG
// // –¢–µ—Ä–º—ñ–Ω slug - —Ü–µ –ª—é–¥–∏–Ω–æ-–∑—Ä–æ–∑—É–º—ñ–ª–∏–π —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä, —è–∫–∏–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —É –≤–µ–±-—Ä–æ–∑—Ä–æ–±—Ü—ñ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —á–∏—Ç–∞–±–µ–ª—å–Ω–∏—Ö URL-–∞–¥—Ä–µ—Å. Slug - —Ü–µ –∑–∞–≤–∂–¥–∏ —Ä—è–¥–æ–∫ —É –Ω–∏–∂–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ, —Å–ª–æ–≤–∞ —è–∫–æ–≥–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ —Ç–∏—Ä–µ.
// // mysite.com/posts/1q8fh74tx -> mysite.com/posts/arrays-for-begginers.
// // –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é slugify(title), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—Ç—ñ, –ø–∞—Ä–∞–º–µ—Ç—Ä title, —ñ –ø–æ–≤–µ—Ä—Ç–∞—î slug, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –∑ —Ü—å–æ–≥–æ —Ä—è–¥–∫–∞.
// // –ó–Ω–∞—á–µ–Ω–Ω—è–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ title –±—É–¥—É—Ç—å —Ä—è–¥–∫–∏, —Å–ª–æ–≤–∞ —è–∫–∏—Ö —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ª–∏—à–µ –ø—Ä–æ–±—ñ–ª–∞–º–∏.
// // –£—Å—ñ —Å–∏–º–≤–æ–ª–∏ slug –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ —É –Ω–∏–∂–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ.
// // –í—Å—ñ —Å–ª–æ–≤–∞ slug –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ —Ç–∏—Ä–µ.

// function slugify(title) {
//   // Change code below this line

//   return title.split(' ').join('-').toLowerCase();

//   // Change code above this line
// }

// console.log(slugify('Arrays for begginers')); // "arrays-for-begginers"
// console.log(slugify('English for developer')); // "english-for-developer"
// console.log(slugify('Ten secrets of JavaScript')); // "ten-secrets-of-javascript"
// console.log(slugify('How to become a JUNIOR developer in TWO WEEKS')); // "how-to-become-a-junior-developer-in-two-weeks"

// // üí° Task 14
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –∑–º—ñ–Ω–Ω—ñ –º—ñ—Å—Ç–∏–ª–∏ —á–∞—Å—Ç–∫–æ–≤—ñ –∫–æ–ø—ñ—ó –≤–∏—Ö—ñ–¥–Ω–æ–≥–æ –º–∞—Å–∏–≤—É fruits.

// const fruits = ['apple', 'plum', 'pear', 'orange', 'banana'];

// // Change code below this line
// const firstTwoEls = fruits.slice(0, 2); // –º–∞—Å–∏–≤ —ñ–∑ –ø–µ—Ä—à–∏—Ö –¥–≤–æ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤;
// console.log(firstTwoEls);
// const nonExtremeEls = fruits.slice(1, fruits.length -1);// –º–∞—Å–∏–≤ –∑ —É—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —Ç–∞ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ
// console.log(nonExtremeEls);
// const lastThreeEls = fruits.slice(-3); //–º–∞—Å–∏–≤ –∑ —É—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —Ç–∞ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ
// console.log(lastThreeEls);

// // üí° Task 15
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π allClients —É—Ç–≤–æ—Ä–∏–≤—Å—è –º–∞—Å–∏–≤ —É—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—ñ–≤ oldClients —ñ newClients.

// const oldClients = ['Mango', 'Ajax', 'Poly', 'Kiwi'];
// const newClients = ['Peach', 'Houston'];

// const allClients = oldClients.concat(newClients); // Change this line

// console.log(oldClients);
// console.log(newClients);
// console.log(allClients);

// // üí° Task 16
// // –ó–ê–î–ê–ß–ê: –ö–û–ú–ü–û–ó–ò–¶–Ü–Ø –ú–ê–°–ò–í–Ü–í
// // –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é makeArray(firstArray, secondArray, maxLength) –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É –∑ —É—Å—ñ–º–∞ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ –¥–≤–æ—Ö –≤–∏—Ö—ñ–¥–Ω–∏—Ö firstArray —ñ secondArray. –ü–∞—Ä–∞–º–µ—Ç—Ä maxLength –º—ñ—Å—Ç–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º—É –¥–æ–≤–∂–∏–Ω—É –Ω–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É.
// // –Ø–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –Ω–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É –±—ñ–ª—å—à–∞ –∑–∞ maxLength, —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –∫–æ–ø—ñ—é –º–∞—Å–∏–≤—É –¥–æ–≤–∂–∏–Ω–æ—é maxLength –µ–ª–µ–º–µ–Ω—Ç—ñ–≤. –í —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –ø–æ–≤–Ω—ñ—Å—Ç—é.
// // –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó makeArray() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º–∏ –º–∞—Å–∏–≤–∞–º–∏ —ñ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏—Å–ª–æ–º –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–∞—Å–∏–≤

// function makeArray(firstArray, secondArray, maxLength) {
//   // Change code below this line
//     let maxlArray = firstArray.concat(secondArray);
//     let totalArray = maxlArray.slice(0, maxLength);

//   return totalArray;
//   // Change code above this line
// }

// console.log(makeArray(['Mango', 'Poly'], ['Ajax', 'Chelsea'], 3)); // ["Mango", "Poly", "Ajax"]
// console.log(makeArray(['Mango', 'Poly', 'Houston'], ['Ajax', 'Chelsea'], 4)); // ["Mango", "Poly", "Houston", "Ajax"]
// console.log(makeArray(['Mango'], ['Ajax', 'Chelsea', 'Poly', 'Houston'], 3)); // ["Mango", "Ajax", "Chelsea"]
// console.log(makeArray(['Earth', 'Jupiter'], ['Neptune', 'Uranus'], 2)); // ["Earth", "Jupiter"]
// console.log(makeArray(['Earth', 'Jupiter'], ['Neptune', 'Uranus'], 4)); // ["Earth", "Jupiter", "Neptune", "Uranus"]
// console.log(makeArray(['Earth', 'Jupiter'], ['Neptune', 'Uranus', 'Venus'], 0)); // []

// // üí° Task 17
// // –î–æ–ø–æ–≤–Ω–∏ —Ü–∏–∫–ª for —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤—ñ–Ω –ª–æ–≥—É–≤–∞–≤ –≤—Å—ñ —Ü—ñ–ª—ñ —á–∏—Å–ª–∞ –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ –≤—ñ–¥ start –¥–æ end –≤–∫–ª—é—á–Ω–æ.
// const start = 3;
// const end = 7;

// for (let i = start; i <= end; i += 1) {
//   // Change this line
//   console.log(i); // 3, 4, 5, 6, 7
// }

// // üí° Task 18
// // –ó–ê–î–ê–ß–ê: –°–£–ú–ê –ß–ò–°–ï–õ (–¶–ò–ö–õ FOR)
// // –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calculateTotal(number), —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ü—ñ–ª–µ —á–∏—Å–ª–æ (–ø–∞—Ä–∞–º–µ—Ç—Ä number) —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Å—É–º—É –≤—Å—ñ—Ö —Ü—ñ–ª–∏—Ö —á–∏—Å–µ–ª –≤—ñ–¥ –æ–¥–∏–Ω–∏—Ü—ñ —ñ –¥–æ —Ü—å–æ–≥–æ —á–∏—Å–ª–∞. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ number –¥–æ—Ä—ñ–≤–Ω—é—î 3, —Ç–æ —Å—É–º–∞ - —Ü–µ 1 + 2 + 3, —Ç–æ–±—Ç–æ 6.
// // –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotal() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏—Å–ª–æ–º –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è

// function calculateTotal(number) {
//   // Change code below this line
//   let total = 0;
//   for (let i = 0; i <= number; i += 1) {
//     total += i;
//   }
//   return total;
//   // Change code above this line
// }
// console.log(calculateTotal(1)); // 1
// console.log(calculateTotal(3)); // 6
// console.log(calculateTotal(7)); // 28
// console.log(calculateTotal(18)); // 171
// console.log(calculateTotal(24)); // 300

// // üí° Task 19
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ü–∏–∫–ª—É for —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤—ñ–Ω –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ –ª–æ–≥—É–≤–∞–≤ —É—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É fruits.

// const fruits = ['apple', 'plum', 'pear', 'orange'];

// for (let i = 0; i < fruits.length; i+=1) { // Change this line
//   const fruit = fruits[i]; // Change this line
//   console.log(fruit);
// }

// // üí° Task 20
// // –ó–ê–î–ê–ß–ê: –û–ë–ß–ò–°–õ–ï–ù–ù–Ø –°–£–ú–ò –ü–û–ö–£–ü–ö–ò
// // –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calculateTotalPrice(order), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä order - –º–∞—Å–∏–≤ —á–∏—Å–µ–ª, —ñ –æ–±—á–∏—Å–ª—é—î –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –π–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤.–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π total, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è —è–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–±–æ—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó. –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º –º–∞—Å–∏–≤–æ–º –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è

// function calculateTotalPrice(order) {
//   let total = 0;
//   // Change code below this line
//   for (let i = 0; i < order.length; i += 1) {
//     total += order[i];
//   }
//   // Change code above this line
//   return total;
// }

// console.log(calculateTotalPrice([12, 85, 37, 4])); // 138
// console.log(calculateTotalPrice([164, 48, 291])); // 503
// console.log(calculateTotalPrice([412, 371, 94, 63, 176])); // 1116

// // üí° Task 21
// // –ó–ê–î–ê–ß–ê: –ü–û–®–£–ö –ù–ê–ô–î–û–í–®–û–ì–û –°–õ–û–í–ê
// // –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é findLongestWord(string), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω–∏–π —Ä—è–¥–æ–∫, —â–æ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –∑—ñ —Å–ª—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω–∏—Ö –ø—Ä–æ–±—ñ–ª–æ–º (–ø–∞—Ä–∞–º–µ—Ç—Ä string), —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–∞–π–¥–æ–≤—à–µ —Å–ª–æ–≤–æ –≤ —Ü—å–æ–º—É —Ä—è–¥–∫—É. –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó findLongestWord() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —Ä—è–¥–∫–æ–º –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è

// function findLongestWord(string) {
//   // Change code below this line
//   const array = string.split(' ');
//   let longesstWord = array[0];
//   for (let i = 0; i < array.length; i += 1) {
//     if (array[i].length > longesstWord.length) {
//       longesstWord = array[i];
//     }
//   }
//   return longesstWord;
//   // Change code above this line
// }

// console.log(findLongestWord('The quick brown fox jumped over the lazy dog')); // jumped
// console.log(findLongestWord('Google do a roll')); // Google
// console.log(findLongestWord('May the force be with you')); // force

// // üí° Task 22
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó createArrayOfNumbers(min, max) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ —É—Å—ñ—Ö —Ü—ñ–ª–∏—Ö —á–∏—Å–µ–ª –≤—ñ–¥ –∑–Ω–∞—á–µ–Ω–Ω—è min –¥–æ max.–í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó createArrayOfNumbers() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º–∏ min —ñ max –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–∞—Å–∏–≤.–í —Ü–∏–∫–ª—ñ for –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤—Å—è –º–µ—Ç–æ–¥ push.

// function createArrayOfNumbers(min, max) {
//   const numbers = [];
//   // Change code below this line
//     for (let i = min; i <= max; i += 1) {
//         numbers.push(i);
//     }
//   // Change code above this line
//   return numbers;
// }

// console.log(createArrayOfNumbers(1, 3)); // [1, 2, 3]
// console.log(createArrayOfNumbers(14, 17)); // [14, 15, 16, 17]
// console.log(createArrayOfNumbers(29, 34)); // [29, 30, 31, 32, 33, 34]

// // üí° Task 23
// // –ó–ê–î–ê–ß–ê: –§–Ü–õ–¨–¢–†–ê–¶–Ü–Ø –ú–ê–°–ò–í–£ –ß–ò–°–ï–õ
// // –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é filterArray(numbers, value), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ —á–∏—Å–µ–ª (–ø–∞—Ä–∞–º–µ—Ç—Ä numbers) —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –≤ —è–∫–æ–º—É –±—É–¥—É—Ç—å —Ç—ñ–ª—å–∫–∏ —Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É numbers, —è–∫—ñ –±—ñ–ª—å—à—ñ –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ value (—á–∏—Å–ª–æ). –í —Ü–∏–∫–ª—ñ for –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤—Å—è –º–µ—Ç–æ–¥ push. –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º –º–∞—Å–∏–≤–æ–º —ñ —á–∏—Å–ª–æ–º –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–∞—Å–∏–≤

// function filterArray(numbers, value) {
//    // Change code below this line
//     let resultArray = [];
//     for (let i = 0; i < numbers.length; i += 1) {
//         if (numbers[i] > value) {
//             resultArray.push(numbers[i]);
//         }
//     }

//  return resultArray;
//   // Change code above this line
// }

// console.log(filterArray([1, 2, 3, 4, 5], 3)); // [4, 5]
// console.log(filterArray([1, 2, 3, 4, 5], 4)); // [5]
// console.log(filterArray([1, 2, 3, 4, 5], 5)); // []
// console.log(filterArray([12, 24, 8, 41, 76], 38)); // [41, 76]
// console.log(filterArray([12, 24, 8, 41, 76], 20)); // [24, 41, 76]

// // üí° Task 24
// // –§—É–Ω–∫—Ü—ñ—è checkFruit(fruit) –ø—Ä–∏–π–º–∞—î —Ä—è–¥–æ–∫ –∑ –Ω–∞–∑–≤–æ—é —Ñ—Ä—É–∫—Ç–∞ (–ø–∞—Ä–∞–º–µ—Ç—Ä fruit), —ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ–π —Ç–∞–∫–∏–π —Ñ—Ä—É–∫—Ç –≤ –º–∞—Å–∏–≤—ñ fruits.
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ —è–∫—â–æ: —Ñ—Ä—É–∫—Ç –ø—Ä–∏—Å—É—Ç–Ω—ñ–π –≤ –º–∞—Å–∏–≤—ñ, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î true; —Ñ—Ä—É–∫—Ç –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –≤ –º–∞—Å–∏–≤—ñ, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î false.
// // –£ —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤—Å—è –º–µ—Ç–æ–¥ includes. –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó checkFruit() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —Å–ª–æ–≤–æ–º –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è boolean

// function checkFruit(fruit) {
//   const fruits = ["apple", "plum", "pear", "orange"];

//   return (fruits.includes(fruit)); // Change this line
// }

// console.log(checkFruit("plum")); // true
// console.log(checkFruit("mandarin")); // false
// console.log(checkFruit("pear")); // true
// console.log(checkFruit("Pear")); // false
// console.log(checkFruit("apple")); // true

// // üí° Task 25
// // –ó–ê–î–ê–ß–ê: –°–ü–Ü–õ–¨–ù–Ü –ï–õ–ï–ú–ï–ù–¢–ò
// // –°–ø—ñ–ª—å–Ω–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–∞—Å–∏–≤—ñ–≤ –Ω–∞–∑–∏–≤–∞—é—Ç—å —Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∏, —è–∫—ñ –ø—Ä–∏—Å—É—Ç–Ω—ñ —É –≤—Å—ñ—Ö –º–∞—Å–∏–≤–∞—Ö.
// // –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —É –¥–≤–æ—Ö –º–∞—Å–∏–≤–∞—Ö [1, 3, 5] —ñ [0, 8, 5, 3] —Å–ø—ñ–ª—å–Ω–∏–º–∏ –±—É–¥—É—Ç—å —á–∏—Å–ª–∞ 3 —ñ 5, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ –≤ –æ–±–æ—Ö –≤–∏—Ö—ñ–¥–Ω–∏—Ö –º–∞—Å–∏–≤–∞—Ö. –ê —á–∏—Å–ª–∞ 0, 1 —ñ 8 –ø—Ä–∏—Å—É—Ç–Ω—ñ —Ç—ñ–ª—å–∫–∏ –≤ –æ–¥–Ω–æ–º—É –∑ –º–∞—Å–∏–≤—ñ–≤.
// // –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é getCommonElements(array1, array2), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –¥–≤–∞ –º–∞—Å–∏–≤–∏ –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ array1 —ñ array2, —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —â–æ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è –∑ —Ç–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —è–∫—ñ –ø—Ä–∏—Å—É—Ç–Ω—ñ –≤ –æ–±–æ—Ö –≤–∏—Ö—ñ–¥–Ω–∏—Ö –º–∞—Å–∏–≤–∞—Ö.
// // –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó getCommonElements() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º–∏ –¥–≤–æ–º–∞ –º–∞—Å–∏–≤–∞–º–∏ –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–∞—Å–∏–≤. –í —Ü–∏–∫–ª—ñ for –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∏—Å—è –º–µ—Ç–æ–¥–∏ includes —ñ push

// function getCommonElements(array1, array2) {
//   // Change code below this line
//     let resultArray = [];
//     for (let i = 0; i < array1.length; i += 1) {
//     if (array2.includes(array1[i])) {
//       resultArray.push(array1[i]);
//     }
//   }
// return resultArray;
//   // Change code above this line
// }

// console.log(getCommonElements([1, 2, 3], [2, 4])); // [2]
// console.log(getCommonElements([1, 2, 3], [2, 1, 17, 19])); // [1, 2]
// console.log(getCommonElements([24, 12, 27, 3], [12, 8, 3, 36, 27])); // [12, 27, 3]
// console.log(getCommonElements([10, 20, 30, 40], [4, 30, 17, 10, 40])); // [10, 30, 40]
// console.log(getCommonElements([1, 2, 3], [10, 20, 30])); // []

// // üí° Task 26
// // –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice(order), –∑–∞–º—ñ–Ω–∏–≤—à–∏ —Ü–∏–∫–ª for –Ω–∞ for...of. –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º –º–∞—Å–∏–≤–æ–º —á–∏—Å–µ–ª –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω—É —Å—É–º—É.

// function calculateTotalPrice(order) {
//   let total = 0;
//   // Change code below this line

// //   for (let i = 0; i < order.length; i += 1) {
// //     total += order[i];
// //     }

//     for (const number of order) {
//         total += number
//     }

//   // Change code above this line
//   return total;
// }

// console.log(calculateTotalPrice([12, 85, 37, 4])); // 138
// console.log(calculateTotalPrice([164, 48, 291])); // 503
// console.log(calculateTotalPrice([412, 371, 94, 63, 176])); // 1116
// console.log(calculateTotalPrice([])); // 0

// // üí° Task 27
// // –ó–ê–î–ê–ß–ê: –§–Ü–õ–¨–¢–†–ê–¶–Ü–Ø –ú–ê–°–ò–í–£ –ß–ò–°–ï–õ 2.0
// // –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray(numbers, value), –∑–∞–º—ñ–Ω–∏–≤—à–∏ —Ü–∏–∫–ª for –Ω–∞ for...of. –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º –º–∞—Å–∏–≤–æ–º —ñ —á–∏—Å–ª–æ–º –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–∞—Å–∏–≤. –§—É–Ω–∫—Ü—ñ—è filterArray() –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª for..of.

// function filterArray(numbers, value) {
//   // Change code below this line
// //   const filteredNumbers = [];

// //   for (let i = 0; i < numbers.length; i += 1) {
// //     const number = numbers[i];

// //     if (number > value) {
// //       filteredNumbers.push(number);
// //     }
// //   }
// //     return filteredNumbers;

//     const filteredNumbers = [];
//     for (const number of numbers) {
//  if (number > value) {
//       filteredNumbers.push(number);
//   }
//     }
//     return filteredNumbers;

//   // Change code above this line
// }

// console.log(filterArray([1, 2, 3, 4, 5], 3)); // [4, 5]
// console.log(filterArray([1, 2, 3, 4, 5], 4)); // [5]
// console.log(filterArray([1, 2, 3, 4, 5], 5)); // []
// console.log(filterArray([12, 24, 8, 41, 76], 38)); // [41, 76]
// console.log(filterArray([12, 24, 8, 41, 76], 20)); // [24, 41, 76]

// // üí° Task 28
// // –î–æ–ø–æ–≤–Ω–∏ –≤–∏—Ä–∞–∑ –æ—Å—Ç–∞—á—ñ –≤—ñ–¥ –¥—ñ–ª–µ–Ω–Ω—è —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –∫–æ–¥ –ø—Ä–æ—Ö–æ–¥–∏–≤ —Ç–µ—Å—Ç–∏.
// // –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó a - —Ü–µ —á–∏—Å–ª–æ 0
// // –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó b - —Ü–µ —á–∏—Å–ª–æ 1
// // –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó c - —Ü–µ —á–∏—Å–ª–æ 3
// // –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó d - —Ü–µ —á–∏—Å–ª–æ 5
// // –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó e - —Ü–µ —á–∏—Å–ª–æ 2
// // const a = 3 % ;
// // const b = 4 % ;
// // const c = 11 % ;
// // const d = 12 % ;
// // const e = 8 % ;

// // Change code below this line
// const a = 3 % 3; // 0
// const b = 4 % 3; // 1
// const c = 11 % 8; // 3
// const d = 12 % 7; // 5
// const e = 8 % 6; // 2

// // üí° Task 29
// // –ó–ê–î–ê–ß–ê: –ü–ê–†–ù–Ü –ß–ò–°–õ–ê
// // –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é getEvenNumbers(start, end), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —É—Å—ñ—Ö –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª –≤—ñ–¥ start –¥–æ end. –ü–∞—Ä–Ω–∏–º –≤–≤–∞–∂–∞—î—Ç—å—Å—è —á–∏—Å–ª–æ, —è–∫–µ –¥—ñ–ª–∏—Ç—å—Å—è –Ω–∞ 2 –±–µ–∑ –æ—Å—Ç–∞—á—ñ (10 % 2 === 0). –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó getEvenNumbers() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º–∏ start —ñ end –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–∞—Å–∏–≤

// function getEvenNumbers(start, end) {
//    // Change code below this line
// // –æ–≥–æ–ª–æ—à—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç—É—é—á–∏–π –º–∞—Å–∏–≤
//     let resultArray = []

// // –ø–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –≤—Å—ñ —á–∏—Å–ª–∞ —Ç–∞ —à—É–∫–∞—î–º–æ –ø–∞—Ä–Ω–µ
//     for (let i = start; i <= end; i += 1) {
//         if (i % 2 === 0) {
// // —è–∫—â–æ –∑–Ω–∞–π—à–ª–∏ - –¥–æ–¥–∞—î–º–æ –≤ —Ä–µ–∑—É–ª—å—Ç—É—é—á–∏–π –º–∞—Å–∏–≤
//             resultArray.push(i);
//         }
//     }
// // –ø–æ–≤–µ—Ä—Ç–∞–µ–º–æ —Ä–µ–∑
// return resultArray;
//     // Change code above this line
// }

// console.log(getEvenNumbers(2, 5)); // [2, 4]
// console.log(getEvenNumbers(3, 11)); // [4, 6, 8, 10]
// console.log(getEvenNumbers(6, 12)); // [6, 8, 10, 12]
// console.log(getEvenNumbers(8, 8)); // [8]
// console.log(getEvenNumbers(7, 7)); // []

// // üí° Task 30
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—É number –∑–∞–ø–∏—Å—É–≤–∞–ª–æ—Å—è –ø–µ—Ä—à–µ —á–∏—Å–ª–æ –≤—ñ–¥ start –¥–æ end, —è–∫–µ –¥—ñ–ª–∏—Ç—å—Å—è –Ω–∞ 5 –±–µ–∑ –æ—Å—Ç–∞—á—ñ. –í —Ü–∏–∫–ª—ñ for –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è break –¥–ª—è –≤–∏—Ö–æ–¥—É –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —É—Å—ñ—Ö —ñ—Ç–µ—Ä–∞—Ü—ñ–π —Ü–∏–∫–ª—É

// const start = 6;
// const end = 27;
// let number;

// for (let i = start; i < end; i += 1) {
//   if (i % 5 === 0) {
//       number = i;
//       break // –¥–æ–¥–∞–Ω–æ
//   }
// }
// console.log(number)

// // –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ start –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 6
// // –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ end –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 27
// // –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ number –±–µ–∑ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
// // –ü—ñ–¥—Å—É–º–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó number –¥–æ—Ä—ñ–≤–Ω—é—î 10

// // üí° Task 31
// // –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó findNumber(start, end, divisor) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞:
// // –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –ø–µ—Ä—à–µ —á–∏—Å–ª–æ –≤—ñ–¥ start –¥–æ end, —è–∫–µ –¥—ñ–ª–∏—Ç—å—Å—è –Ω–∞ divisor –±–µ–∑ –æ—Å—Ç–∞—á—ñ
// // –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä break
// // –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∞ –∑–º—ñ–Ω–Ω—É number
// // –í–∏–∫–ª–∏–∫ findNumber() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º –Ω–∞–±–æ—Ä–æ–º —á–∏—Å–µ–ª –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// // –í —Ü–∏–∫–ª—ñ for –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è break –¥–ª—è –≤–∏—Ö–æ–¥—É –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤—Å—ñ—Ö —ñ—Ç–µ—Ä–∞—Ü—ñ–π —Ü–∏–∫–ª—É

// // function findNumber(start, end, divisor) {
// //   // Change code below this line
// //   let number;

// //   for (let i = start; i < end; i += 1) {
// //     if (i % divisor === 0) {
// //       number = i;
// //       break;
// //     }
// //   }

// //   return number;
// //   // Change code above this line
// // }

// function findNumber(start, end, divisor) {
//   // Change code below this line
//   for (let i = start; i < end; i += 1) {
//     if (i % divisor === 0) {
//       return i;
//     }
//   }

//   // Change code above this line
// }

// console.log(findNumber(2, 6, 5)); // 5
// console.log(findNumber(8, 17, 3)); // 9
// console.log(findNumber(6, 9, 4)); // 8
// console.log(findNumber(16, 35, 7)); // 21

// // üí° Task 32
// // –ó–ê–î–ê–ß–ê: –§–£–ù–ö–¶–Ü–Ø INCLUDES()
// // –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é includes(array, value), —è–∫–∞ —Ä–æ–±–∏—Ç—å —Ç–µ —Å–∞–º–µ, —â–æ —ñ –º–µ—Ç–æ–¥ –º–∞—Å–∏–≤—É –º–∞—Å–∏–≤.includes(–∑–Ω–∞—á–µ–Ω–Ω—è) - –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –ø—Ä–∏—Å—É—Ç–Ω—î –≤ –º–∞—Å–∏–≤—ñ array –∑–Ω–∞—á–µ–Ω–Ω—è value, –ø–æ–≤–µ—Ä—Ç–∞—é—á–∏ true, —è–∫—â–æ –ø—Ä–∏—Å—É—Ç–Ω—î, —ñ false –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.
// // –ü—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ —Ü—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è –≤ —Ç—ñ–ª—ñ —Ñ—É–Ω–∫—Ü—ñ—ó includes() –Ω–µ –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –º–µ—Ç–æ–¥ –º–∞—Å–∏–≤.includes(–∑–Ω–∞—á–µ–Ω–Ω—è).
// // –í–∏–∫–ª–∏–∫ includes() –¥–ª—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º value –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π boolean
// // –£ —Ñ—É–Ω–∫—Ü—ñ—ó includes –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è for, return, –∞–ª–µ –Ω–µ –º–µ—Ç–æ–¥ –º–∞—Å–∏–≤—É includes

// function includes(array, value) {
//   //     —à—É–∫–∞—î–º–æ —ñ–Ω–¥–µ–∫—Å —à—É–∫–∞—î–º–æ–≥–æ –≤ –º–∞—Å–∏–≤—ñ
//   //     —è–∫—â–æ = 0 - –≤—ñ–Ω —î
//   // —è–∫—â–æ —á–∏—Å–ª–æ –≤—ñ–¥ 1 —Ç–∞ –≤–∏—â–µ - —î
//   //     —è–∫—â–æ -1 - –Ω–µ–º–∞—î
//   for (const items of array) {
//     if (array.indexOf(value) === -1) {
//       return false;
//     } else {
//         return true
//     }
//   }
// }

// console.log(includes([1, 2, 3, 4, 5], 3)); // true
// console.log(includes([1, 2, 3, 4, 5], 17)); // false
// console.log(
//   includes(['Earth', 'Mars', 'Venus', 'Jupiter', 'Saturn'], 'Jupiter')
// ); // true
// console.log(
//   includes(['Earth', 'Mars', 'Venus', 'Jupiter', 'Saturn'], 'Uranus')
// ); // false
// console.log(includes(['apple', 'plum', 'pear', 'orange'], 'plum')); // true
// console.log(includes(['apple', 'plum', 'pear', 'orange'], 'kiwi')); // false

// // üìúüìúüìú –ü—Ä–∞–∫—Ç–∏–∫–∞

// // üìú 1
// // –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø–æ—Ä—ñ–≤–Ω—è—î –¥–≤–∞ –º–∞—Å–∏–≤–∞ —ñ –≤–∏–≤–µ–¥–µ —É –∫–æ–Ω—Å–æ–ª—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–∏ —É—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —É –Ω–∏—Ö –æ–¥–Ω–∞–∫–æ–≤—ñ
// const arr1 = [1, 4, 6, 'color', 324, 232, 'list', 11, 9, 'dream', 34, 0, -30];
// const arr2 = [6, 'dream', -30, 11, 9, 1, 324, 34, 'color', 4, 232, 0, 'list'];

// const arr3 = [4, 232, 6, -30, 'color', 324, 'list', 1, 11, 9, 'dream', 34, 0];
// const arr4 = ['color', 6, -30, 11, 9, 1, 'dream', 324, 34, 4, 232, 0, 'list'];

// const arr5 = [1, 4, 6, 'color', 'list', 11, 9, 'dream', 34, 0, -30, 'lesson'];
// const arr6 = [6, 324, 'dream', -30, 9, 8, 34, 'color', 4, 232, 0, 'list', 11];

// const arr7 = [1, 4, 6, 'color', 324, 232, 'list', 11, 9, 'dream', 34, 0, -30];
// const arr8 = [6, 'dream', -30, 10, 9, 1, 324, 34, 'color', 4, 232, 0, 'list'];

// const arr9 = [4, 6, 'color', 324, 232, 'list', 11, 9, 'dream', 34, 0, -30];
// const arr0 = [6, 'dream', -30, 11, 9, 1, 324, 34, 'color', 4, 232, 0, 'list'];

// function compareArrs(array1, array2) {
//   if (array1.length !== array2.length) {
//     return false;
//   } else {
//     for (const elem1 of array1) {
//       if (!array2.includes(elem1)) {
//         return false;
//       }
//     }
//   }
//   return true;
// }
// console.log(compareArrs(arr1, arr2));
// console.log(compareArrs(arr3, arr4));
// console.log(compareArrs(arr5, arr6));
// console.log(compareArrs(arr7, arr8));
// console.log(compareArrs(arr9, arr0));

// // üìú 2
// // –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é calculateAverage(), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö–Ω–µ —Å–µ—Ä–µ–¥–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è.–î–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —â–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —Ü–µ —á–∏—Å–ª–∞.

// function calculateAverage() {
//   let total = 0;
//   let i = 0;
//   const arr = [];
//   for (const elem of Array.from(arguments)) {
//     if (Number.isNaN(Number(elem))) {
//     } else {
//       total += elem;
//       i += 1;
//     }
//   }
//   return total / i;
// }

// console.log(calculateAverage(1, 2, 3, 4, 'g', 5));

// // üìú 3
// // –ù–∞–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é, –∫–æ—Ç—Ä–∞ –æ—Ç—Ä–∏–º—É—î —Ä—è–¥–æ–∫. –ó–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ü–∏–∫–ª—É for –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ –ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∫—ñ–ª—å–µ–∫–æ—Å—Ç—ñ —Å–∏–º–≤–æ–ª—ñ –≤ —Ä—è–¥–∫—É
// function countSymbols(someString) {
//   console.log(someString.length);
// }
// countSymbols('efg;EG;gj a;OGEOG;')

// // üìú 4
// // –ù–∞–ø–∏—à–∏—Ç—å —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –æ—Ç—Ä–∏–º–∞—î –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–∏—Å–ª–æ(–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) —ñ –≤–∏–≤–µ–¥–µ –≤ –∫–æ–Ω—Å–æ–ª—å —É —ñ–æ—Ä–º–∞—Ç–∏ –≥–æ–¥–∏–Ω —Ö–≤–∏–ª–∏–Ω.–¢–æ–±—Ç–æ, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—è –≤–∫–∞–∑–∞–≤ —á–∏—Å–ª–æ 70, –≤ –∫–æ–Ω—Å–æ–ª—ñ –æ—Ç—Ä–∏–º–∞—î–º–æ "01:10"

// function setTime() {
//   const value = prompt('enter minutes');
//   let hours = 0;
//   let minutes = 0;

//   if (Number.isNaN(Number(value))) {
//     alert(`${value} not a number`);
//   } else {
//     hours = String(Math.floor(value / 60)).padStart(2,0);
//     // if (hours< 10) {
//     //   hours = '0' + hours;
//     // }
//     minutes = String(value % 60).padStart(2, 0);
//     //  if (minutes < 10) {
//     //    minutes = '0' + minutes;
//     //  }
//     console.log(`${hours}:${minutes}`);
//   }
// }

// setTime();
