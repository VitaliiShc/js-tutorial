// // üí° Task 01
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π result –±—É–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó makePizza, –∞ —É –∑–º—ñ–Ω–Ω—ñ–π pointer –±—É–ª–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—é makePizza.

// function makePizza() {
//   return 'Your pizza is being prepared, please wait.';
// }
// // Change code below this line

// const result = makePizza();
// const pointer = makePizza;

// console.log(result);
// console.log(pointer);

// // üí° Task 02
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é makeMessage —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –æ—á—ñ–∫—É–≤–∞–ª–∞ –¥—Ä—É–≥–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º (–ø–∞—Ä–∞–º–µ—Ç—Ä callback) –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—é —ñ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ —ó—ó –≤–∏–∫–ª–∏–∫. –§—É–Ω–∫—Ü—ñ—è deliverPizza –∞–±–æ makePizza –±—É–¥–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏—Å—è —è–∫ –∫–æ–ª–±–µ–∫ —ñ –æ—á—ñ–∫—É–≤–∞—Ç–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º —ñ–º'—è –≥–æ—Ç–æ–≤–æ—ó –ø—ñ—Ü–∏, —â–æ –¥–æ—Å—Ç–∞–≤–ª—è—î—Ç—å—Å—è.

// function deliverPizza(pizzaName) {
//   return `Delivering ${pizzaName} pizza.`;
// }

// function makePizza(pizzaName) {
//   return `Pizza ${pizzaName} is being prepared, please wait...`;
// }

// // Chande code below this line
// function makeMessage(pizzaName, callback) {
//   return callback(pizzaName);
// }

// console.log(makeMessage('Royal Grand', makePizza)); // "Pizza Royal Grand is being prepared, please wait..."
// console.log(makeMessage('Ultracheese', deliverPizza)); //  "Delivering Ultracheese pizza."

// // üí° Task 03
// // –î–æ–ø–æ–≤–Ω–∏ –¥—Ä—É–≥–∏–π –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó makePizza(pizzaName, callback), –ø–µ—Ä–µ–¥–∞–≤—à–∏ –¥—Ä—É–≥–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º —ñ–Ω–ª–∞–π–Ω –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—é eatPizza(pizzaName), —è–∫–∞ –ª–æ–≥—É—î —Ä—è–¥–æ–∫ "Eating pizza <–Ω–∞–∑–≤–∞ –ø—ñ—Ü–∏>".

// function makePizza(pizzaName, callback) {
//   console.log(`Pizza ${pizzaName} is being prepared, please wait...`);
//   callback(pizzaName);
// }

// makePizza('Royal Grand', function deliverPizza(pizzaName) {
//   console.log(`Delivering pizza ${pizzaName}.`);
// });
// // Change code below this line

// makePizza('Ultracheese', function eatPizza(pizzaName) {
//     console.log(`Eating pizza ${pizzaName}`);
// });

// // üí° Task 04
// // –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –æ–±—Ä–æ–±–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—ñ—Ü–∏. –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –º–µ—Ç–æ–¥—É order —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤—ñ–Ω –ø—Ä–∏–π–º–∞–≤ –¥—Ä—É–≥–∏–º —ñ —Ç—Ä–µ—Ç—ñ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–≤–∞ –∫–æ–ª–±–µ–∫–∏ onSuccess —ñ onError.
// // –Ø–∫—â–æ —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ pizzas –≤—ñ–¥—Å—É—Ç–Ω—è –ø—ñ—Ü–∞ –∑ –Ω–∞–∑–≤–æ—é –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ pizzaName, –º–µ—Ç–æ–¥ order –ø–æ–≤–∏–Ω–µ–Ω –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–ª–∏–∫—É –∫–æ–ª–±–µ–∫–∞ onError, –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º —Ä—è–¥–æ–∫ "There is no pizza with a name <–∏–º—è –ø–∏—Ü—Ü—ã> in the assortment."
// // –Ø–∫—â–æ —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ pizzas –ø—Ä–∏—Å—É—Ç–Ω—è –ø—ñ—Ü–∞ –∑ –Ω–∞–∑–≤–æ—é –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ pizzaName, –º–µ—Ç–æ–¥ order –ø–æ–≤–∏–Ω–µ–Ω –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–ª–∏–∫—É –∫–æ–ª–±–µ–∫–∞ onSuccess, –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –Ω–∞–∑–≤—É –∑–∞–º–æ–≤–ª–µ–Ω–æ—ó –ø—ñ—Ü–∏.
// // –ü—ñ—Å–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ pizzaPalace –º–∏ –¥–æ–¥–∞–ª–∏ –∫–æ–ª–±–µ–∫–∏ —ñ –≤–∏–∫–ª–∏–∫–∏ –º–µ—Ç–æ–¥—ñ–≤. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω—ñ—á–æ–≥–æ —Ç–∞–º –Ω–µ –º—ñ–Ω—è–π.

// const pizzaPalace = {
//   pizzas: ['Ultracheese', 'Smoked', 'Four meats'],
//   order(pizzaName, makePizza, onOrderError) {
//     if (this.pizzas.includes(pizzaName)) {
//           return makePizza(pizzaName);
//     }
//         return onOrderError(
//       `There is no pizza with a name ${pizzaName} in the assortment.`
//     );
//   },
// };

// // Change code above this line

// // Callback for onSuccess
// function makePizza(pizzaName) {
//   return `Your order is accepted. Cooking pizza ${pizzaName}.`;
// }

// // Callback for onError
// function onOrderError(error) {
//   return `Error! ${error}`;
// }

// // Method calls with callbacks
// pizzaPalace.order('Smoked', makePizza, onOrderError);
// pizzaPalace.order('Four meats', makePizza, onOrderError);
// pizzaPalace.order('Big Mike', makePizza, onOrderError);
// pizzaPalace.order('Vienna', makePizza, onOrderError);

// console.log(pizzaPalace.order('Smoked', makePizza, onOrderError)); // "Your order is accepted. Cooking pizza Smoked."
// console.log(pizzaPalace.order('Four meats', makePizza, onOrderError)); // "Your order is accepted. Cooking pizza Four meats."
// console.log(pizzaPalace.order('Big Mike', makePizza, onOrderError)); // "Error! There is no pizza with a name Big Mike in the assortment."
// console.log(pizzaPalace.order('Vienna', makePizza, onOrderError)); // "Error! There is no pizza with a name Vienna in the assortment."

// // üí° Task 05
// // –§—É–Ω–∫—Ü—ñ—è calculateTotalPrice(orderedItems) –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä orderedItems - –º–∞—Å–∏–≤ —á–∏—Å–µ–ª, —ñ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –π–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —è–∫–∞ –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π totalPrice —ñ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è —è–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–±–æ—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó.
// // –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –∑–∞–º—ñ—Å—Ç—å —Ü–∏–∫–ª—É for, –≤–æ–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∞ –º–µ—Ç–æ–¥ forEach.

// function calculateTotalPrice(orderedItems) {
//   let totalPrice = 0;
//   // Change code below this line
//   orderedItems.forEach(function (item) {
//     totalPrice += item;
//   });

//   // for (let i = 0; i < orderedItems.length; i += 1) {
//   //   totalPrice += orderedItems[i];
//   // }

//   // Change code above this line
//   return totalPrice;
// }

// console.log(calculateTotalPrice([12, 85, 37, 4])); // 138
// console.log(calculateTotalPrice([164, 48, 291])); // 503
// console.log(calculateTotalPrice([412, 371, 94, 63, 176])); // 1116

// //  üí° Task 06
// // –ó–ê–î–ê–ß–ê. –§–Ü–õ–¨–¢–†–ê–¶–Ü–Ø –ú–ê–°–ò–í–£ –ß–ò–°–ï–õ
// // –§—É–Ω–∫—Ü—ñ—è filterArray(numbers, value) –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ —á–∏—Å–µ–ª numbers —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –≤ —è–∫–æ–º—É –±—É–¥—É—Ç—å —Ç—ñ–ª—å–∫–∏ —Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –º–∞—Å–∏–≤—É, —è–∫—ñ –±—ñ–ª—å—à—ñ –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ value.
// // –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –∑–∞–º—ñ—Å—Ç—å —Ü–∏–∫–ª—É for, –≤–æ–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∞ –º–µ—Ç–æ–¥ forEach.

// function filterArray(numbers, value) {
//   const filteredNumbers = [];
//   // Change code below this line

//   // for (let i = 0; i < numbers.length; i += 1) {
//   //   if (numbers[i] > value) {
//   //     filteredNumbers.push(numbers[i]);
//   //   }
//   // }

// numbers.forEach(function (number) {
//     if (number > value) {
//       filteredNumbers.push(number);
//     }
// });

//   // Change code above this line
//   return filteredNumbers;
// }

// console.log(filterArray([1, 2, 3, 4, 5], 3)); // [4, 5]
// console.log(filterArray([1, 2, 3, 4, 5], 4)); // [5]
// console.log(filterArray([1, 2, 3, 4, 5], 5)); // []
// console.log(filterArray([12, 24, 8, 41, 76], 38)); // [41, 76]
// console.log(filterArray([12, 24, 8, 41, 76], 20)); // [24, 41, 76]

// // üí° Task 07
// // –ó–ê–î–ê–ß–ê. –°–ü–Ü–õ–¨–ù–Ü –ï–õ–ï–ú–ï–ù–¢–ò
// // –§—É–Ω–∫—Ü—ñ—è getCommonElements(firstArray, secondArray) –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –º–∞—Å–∏–≤–∏ –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ firstArray —ñ secondArray, —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ —ó—Ö–Ω—ñ—Ö —Å–ø—ñ–ª—å–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —Ç–æ–±—Ç–æ —Ç–∏—Ö, —è–∫—ñ –ø—Ä–∏—Å—É—Ç–Ω—ñ –≤ –æ–±–æ—Ö –º–∞—Å–∏–≤–∞—Ö.
// // –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –∑–∞–º—ñ—Å—Ç—å —Ü–∏–∫–ª—É for, –≤–æ–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∞ –º–µ—Ç–æ–¥ forEach.

// function getCommonElements(firstArray, secondArray) {
//   const commonElements = [];
//   // Change code below this line

//   // for (let i = 0; i < firstArray.length; i += 1) {
//   //   if (secondArray.includes(firstArray[i])) {
//   //     commonElements.push(firstArray[i]);
//   //   }
//   // }

//   firstArray.forEach(function (number) {
//     if (secondArray.includes(number)) {
//       commonElements.push(number);
//     }
//   });
//   return commonElements;
//   // Change code above this line
// }

// console.log(getCommonElements([1, 2, 3], [2, 4])); // [2]
// console.log(getCommonElements([1, 2, 3], [2, 1, 17, 19])); // [1, 2]
// console.log(getCommonElements([24, 12, 27, 3], [12, 8, 3, 36, 27])); // [12, 27, 3]
// console.log(getCommonElements([10, 20, 30, 40], [4, 30, 17, 10, 40])); // [10, 30, 40]
// console.log(getCommonElements([1, 2, 3], [10, 20, 30])); // []

// // üí° Task 08
// // –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice() —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –±—É–ª–∞ –æ–≥–æ–ª–æ—à–µ–Ω–∞ —è–∫ —Å—Ç—Ä—ñ–ª–æ—á–Ω–∞.

// // Change code below this line

// // function calculateTotalPrice(quantity, pricePerItem) {

// const calculateTotalPrice = (quantity, pricePerItem) => {
//   // Change code above this line
//   return quantity * pricePerItem;
// };

// console.log(calculateTotalPrice(5, 100)); // 500
// console.log(calculateTotalPrice(8, 60)); // 480
// console.log(calculateTotalPrice(3, 400)); // 1200

// // üí° Task 09
// // –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice() —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∞ –Ω–µ—è–≤–Ω–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è.

// // Change code below this line
// const calculateTotalPrice = (quantity, pricePerItem) => quantity * pricePerItem;
// // Change code above this line

// console.log(calculateTotalPrice(5, 100)); // 500
// console.log(calculateTotalPrice(8, 60)); // 480
// console.log(calculateTotalPrice(3, 400)); // 1200

// // üí° Task 10
// // –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice(orderedItems), –∑–∞–º—ñ–Ω–∏–≤—à–∏ —ó—ó –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –Ω–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é. –ó–∞–º—ñ–Ω–∏ –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—é, –ø–µ—Ä–µ–¥–∞–Ω—É –≤ –º–µ—Ç–æ–¥ forEach(), –Ω–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é.

// // Change code below this line
// // function calculateTotalPrice(orderedItems) {
// //   let totalPrice = 0;

// //   orderedItems.forEach(function (item) {
// //     totalPrice += item;
// //   });

// //   return totalPrice;
// // }

// const calculateTotalPrice = orderedItems => {
//   let totalPrice = 0;

//   orderedItems.forEach(item => (totalPrice += item));

//   return totalPrice;
// };

// // Change code above this line

// console.log(calculateTotalPrice([12, 85, 37, 4])); // 138
// console.log(calculateTotalPrice([164, 48, 291])); // 503
// console.log(calculateTotalPrice([412, 371, 94, 63, 176])); // 1116

// // üí° Task 11
// // –ó–ê–î–ê–ß–ê. –§–Ü–õ–¨–¢–†–ê–¶–Ü–Ø –ú–ê–°–ò–í–£ –ß–ò–°–ï–õ 2.0
// // –ó–∞–º—ñ–Ω–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó filterArray() —ñ –∫–æ–ª–±–µ–∫ –¥–ª—è –º–µ—Ç–æ–¥—É forEach() –Ω–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.

// // Change code below this line
// // function filterArray(numbers, value) {
// //   const filteredNumbers = [];

// //   numbers.forEach(function (number) {
// //     if (number > value) {
// //       filteredNumbers.push(number);
// //     }
// //   });

// const filterArray = (numbers, value) => {
//   const filteredNumbers = [];

//   numbers.forEach(number => {
//     if (number > value) {
//       filteredNumbers.push(number);
//     }
//   });

//   // Change code above this line
//   return filteredNumbers;
// };

// console.log(filterArray([1, 2, 3, 4, 5], 3)); // [4, 5]
// console.log(filterArray([1, 2, 3, 4, 5], 4)); // [5]
// console.log(filterArray([1, 2, 3, 4, 5], 5)); // []
// console.log(filterArray([12, 24, 8, 41, 76], 38)); // [41, 76]
// console.log(filterArray([12, 24, 8, 41, 76], 20)); // [24, 41, 76]

// // üí° Task 12
// // –ó–ê–î–ê–ß–ê. –°–ü–Ü–õ–¨–ù–Ü –ï–õ–ï–ú–ï–ù–¢–ò 2.0
// // –ó–∞–º—ñ–Ω–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó getCommonElements() —ñ –∫–æ–ª–±–µ–∫ –¥–ª—è –º–µ—Ç–æ–¥—É forEach() –Ω–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.

// // Change code below this line
// const getCommonElements = (firstArray, secondArray) => {
//   const commonElements = [];

//   firstArray.forEach(element => {
//     if (secondArray.includes(element)) {
//       commonElements.push(element);
//     }
//   });

//   // Change code above this line
//   return commonElements;
// };

// console.log(getCommonElements([1, 2, 3], [2, 4])); // [2]
// console.log(getCommonElements([1, 2, 3], [2, 1, 17, 19])); // [1, 2]
// console.log(getCommonElements([24, 12, 27, 3], [12, 8, 3, 36, 27])); // [12, 27, 3]
// console.log(getCommonElements([10, 20, 30, 40], [4, 30, 17, 10, 40])); // [10, 30, 40]
// console.log(getCommonElements([1, 2, 3], [10, 20, 30])); // []

// // üí° Task 13
// // –§—É–Ω–∫—Ü—ñ—è changeEven(numbers, value) –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ —á–∏—Å–µ–ª numbers —ñ –æ–Ω–æ–≤–ª—é—î –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–æ–≥–æ - —Ü–µ –ø–∞—Ä–Ω–µ —á–∏—Å–ª–æ, –¥–æ–¥–∞—é—á–∏ –¥–æ –Ω—å–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ value.
// // –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ —Å—Ç–∞–ª–∞ —á–∏—Å—Ç–æ—é - –Ω–µ –∑–º—ñ–Ω—é–≤–∞–ª–∞ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª numbers, –∞ —Å—Ç–≤–æ—Ä—é–≤–∞–ª–∞, –Ω–∞–ø–æ–≤–Ω—é–≤–∞–ª–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏.

// function changeEven(numbers, value) {
//   // Change code below this line
//   // for (let i = 0; i < numbers.length; i += 1) {
//   //   if (numbers[i] % 2 === 0) {
//   //     numbers[i] = numbers[i] + value;
//   //   }
//   // }
//   const newChangeEven = [];
//   for (let i = 0; i < numbers.length; i += 1) {
//     if (numbers[i] % 2 === 0) {
//       newChangeEven.push(numbers[i] + value);

//     } else {
//       newChangeEven.push(numbers[i]);
//     }
//   }
//   return newChangeEven;
//   // Change code above this line
// }

// console.log(changeEven([1, 2, 3, 4, 5], 10)); // [1, 12, 3, 14, 5]
// console.log(changeEven([2, 8, 3, 7, 4, 6], 10)); // [12, 18, 3, 7, 14, 16]
// console.log(changeEven([17, 24, 68, 31, 42], 100)); // [17, 124, 168, 31, 142]
// console.log(changeEven([44, 13, 81, 92, 36, 54], 100)); // [144, 13, 81, 192, 136, 154]

// // üí° Task 14
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π planetsLengths –≤–∏–π—à–æ–≤ –º–∞—Å–∏–≤ –¥–æ–≤–∂–∏–Ω –Ω–∞–∑–≤ –ø–ª–∞–Ω–µ—Ç. –û–±–æ–≤'—è–∑–∫–æ–≤–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –º–µ—Ç–æ–¥ map().

// const planets = ['Earth', 'Mars', 'Venus', 'Jupiter'];
// // Change code below this line
// // const planetsLengths = planets;
// const planetsLengths = planets.map(planet => planet.length);

// console.log(planetsLengths); // [5, 4, 5, 7]
// console.log(planets); // ['Earth', 'Mars', 'Venus', 'Jupiter']

// // üí° Task 15
// // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ map(), –∑—Ä–æ–±–∏ —Ç–∞–∫, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π titles –≤–∏–π—à–æ–≤ –º–∞—Å–∏–≤ –Ω–∞–∑–≤ –∫–Ω–∏–≥ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å title) –∑ —É—Å—ñ—Ö –æ–±'—î–∫—Ç—ñ–≤ –º–∞—Å–∏–≤—É books.

// const books = [
//   {
//     title: 'The Last Kingdom',
//     author: 'Bernard Cornwell',
//     rating: 8.38,
//   },
//   {
//     title: 'Beside Still Waters',
//     author: 'Robert Sheckley',
//     rating: 8.51,
//   },
//   {
//     title: 'The Dream of a Ridiculous Man',
//     author: 'Fyodor Dostoevsky',
//     rating: 7.75,
//   },
//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },
//   { title: 'Enemy of God', author: 'Bernard Cornwell', rating: 8.67 },
// ];
// // Change code below this line
// // const titles = books;
// const titles = books.map(book => book.title);

// console.log(titles); // ["The Last Kingdom", "Beside Still Waters", "The Dream of a Ridiculous Man", "Redder Than Blood", "Enemy of God"]

// // üí° Task 16
// // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ flatMap(), –∑—Ä–æ–±–∏ —Ç–∞–∫, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π genres –≤–∏–π—à–æ–≤ –º–∞—Å–∏–≤ —É—Å—ñ—Ö –∂–∞–Ω—Ä—ñ–≤ –∫–Ω–∏–≥ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å genres) –∑ –º–∞—Å–∏–≤—É –∫–Ω–∏–≥ books.

// const books = [
//   {
//     title: "The Last Kingdom",
//     author: "Bernard Cornwell",
//     genres: ["adventure", "history"],
//   },
//   {
//     title: "Beside Still Waters",
//     author: "Robert Sheckley",
//     genres: ["fiction"],
//   },
//   {
//     title: "Redder Than Blood",
//     author: "Tanith Lee",
//     genres: ["horror", "mysticism"],
//   },
// ];
// // Change code below this line
// // const genres = books;
// const genres = books.flatMap(book => book.genres);

// console.log(genres); // [ "adventure", "history", "fiction", "horror", "mysticism" ]

// // üí° Task 17
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é getUserNames(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ —ñ–º–µ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å name) –∑ –º–∞—Å–∏–≤—É –æ–±'—î–∫—Ç—ñ–≤ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ users.
// // –ó–º—ñ–Ω–Ω—ñ–π getUserNames –ø—Ä–∏—Å–≤–æ—î–Ω–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º (users).
// // –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥ map()

// // Change code below this line
// // const getUserNames = users => {
// //       };

// const getUserNames = users => users.map(user => user.name);

// // Change code above this line

// console.log(
//   getUserNames([
//     {
//       name: 'Moore Hensley',
//       email: 'moorehensley@indexia.com',
//       eyeColor: 'blue',
//       friends: ['Sharron Pace'],
//       isActive: false,
//       balance: 2811,
//       skills: ['ipsum', 'lorem'],
//       gender: 'male',
//       age: 37,
//     },
//     {
//       name: 'Sharlene Bush',
//       email: 'sharlenebush@tubesys.com',
//       eyeColor: 'blue',
//       friends: ['Briana Decker', 'Sharron Pace'],
//       isActive: true,
//       balance: 3821,
//       skills: ['tempor', 'mollit', 'commodo', 'veniam', 'laborum'],
//       gender: 'female',
//       age: 34,
//     },
//     {
//       name: 'Ross Vazquez',
//       email: 'rossvazquez@xinware.com',
//       eyeColor: 'green',
//       friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//       isActive: false,
//       balance: 3793,
//       skills: ['nulla', 'anim', 'proident', 'ipsum', 'elit'],
//       gender: 'male',
//       age: 24,
//     },
//     {
//       name: 'Elma Head',
//       email: 'elmahead@omatom.com',
//       eyeColor: 'green',
//       friends: ['Goldie Gentry', 'Aisha Tran'],
//       isActive: true,
//       balance: 2278,
//       skills: ['adipisicing', 'irure', 'velit'],
//       gender: 'female',
//       age: 21,
//     },
//     {
//       name: 'Carey Barr',
//       email: 'careybarr@nurali.com',
//       eyeColor: 'blue',
//       friends: ['Jordan Sampson', 'Eddie Strong'],
//       isActive: true,
//       balance: 3951,
//       skills: ['ex', 'culpa', 'nostrud'],
//       gender: 'male',
//       age: 27,
//     },
//     {
//       name: 'Blackburn Dotson',
//       email: 'blackburndotson@furnigeer.com',
//       eyeColor: 'brown',
//       friends: ['Jacklyn Lucas', 'Linda Chapman'],
//       isActive: false,
//       balance: 1498,
//       skills: ['non', 'amet', 'ipsum'],
//       gender: 'male',
//       age: 38,
//     },
//     {
//       name: 'Sheree Anthony',
//       email: 'shereeanthony@kog.com',
//       eyeColor: 'brown',
//       friends: ['Goldie Gentry', 'Briana Decker'],
//       isActive: true,
//       balance: 2764,
//       skills: ['lorem', 'veniam', 'culpa'],
//       gender: 'female',
//       age: 39,
//     },
//   ])
// ); // ["Moore Hensley", "Sharlene Bush", "Ross Vazquez", "Elma Head", "Carey Barr", "Blackburn Dotson", "Sheree Anthony"]

// // üí° Task 18
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é getUserEmails(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ –ø–æ—à—Ç–æ–≤–∏—Ö –∞–¥—Ä–µ—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å email) –∑ –º–∞—Å–∏–≤—É –æ–±'—î–∫—Ç—ñ–≤ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ users.

// // Change code below this line
// // const getUserEmails = users => { };

// const getUserEmails = users => users.map(user => user.email);
// // Change code above this line

// console.log(
//   getUserEmails([
//     {
//       name: 'Moore Hensley',
//       email: 'moorehensley@indexia.com',
//       eyeColor: 'blue',
//       friends: ['Sharron Pace'],
//       isActive: false,
//       balance: 2811,
//       skills: ['ipsum', 'lorem'],
//       gender: 'male',
//       age: 37,
//     },
//     {
//       name: 'Sharlene Bush',
//       email: 'sharlenebush@tubesys.com',
//       eyeColor: 'blue',
//       friends: ['Briana Decker', 'Sharron Pace'],
//       isActive: true,
//       balance: 3821,
//       skills: ['tempor', 'mollit', 'commodo', 'veniam', 'laborum'],
//       gender: 'female',
//       age: 34,
//     },
//     {
//       name: 'Ross Vazquez',
//       email: 'rossvazquez@xinware.com',
//       eyeColor: 'green',
//       friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//       isActive: false,
//       balance: 3793,
//       skills: ['nulla', 'anim', 'proident', 'ipsum', 'elit'],
//       gender: 'male',
//       age: 24,
//     },
//     {
//       name: 'Elma Head',
//       email: 'elmahead@omatom.com',
//       eyeColor: 'green',
//       friends: ['Goldie Gentry', 'Aisha Tran'],
//       isActive: true,
//       balance: 2278,
//       skills: ['adipisicing', 'irure', 'velit'],
//       gender: 'female',
//       age: 21,
//     },
//     {
//       name: 'Carey Barr',
//       email: 'careybarr@nurali.com',
//       eyeColor: 'blue',
//       friends: ['Jordan Sampson', 'Eddie Strong'],
//       isActive: true,
//       balance: 3951,
//       skills: ['ex', 'culpa', 'nostrud'],
//       gender: 'male',
//       age: 27,
//     },
//     {
//       name: 'Blackburn Dotson',
//       email: 'blackburndotson@furnigeer.com',
//       eyeColor: 'brown',
//       friends: ['Jacklyn Lucas', 'Linda Chapman'],
//       isActive: false,
//       balance: 1498,
//       skills: ['non', 'amet', 'ipsum'],
//       gender: 'male',
//       age: 38,
//     },
//     {
//       name: 'Sheree Anthony',
//       email: 'shereeanthony@kog.com',
//       eyeColor: 'brown',
//       friends: ['Goldie Gentry', 'Briana Decker'],
//       isActive: true,
//       balance: 2764,
//       skills: ['lorem', 'veniam', 'culpa'],
//       gender: 'female',
//       age: 39,
//     },
//   ])
// ); // ["moorehensley@indexia.com", "sharlenebush@tubesys.com", "rossvazquez@xinware.com", "elmahead@omatom.com", "careybarr@nurali.com", "blackburndotson@furnigeer.com", "shereeanthony@kog.com"]

// // üí° Task  19
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π evenNumbers —É—Ç–≤–æ—Ä–∏–≤—Å—è –º–∞—Å–∏–≤ –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª –∑ –º–∞—Å–∏–≤—É numbers, –∞ –≤ –∑–º—ñ–Ω–Ω—ñ–π oddNumbers - –º–∞—Å–∏–≤ –Ω–µ–ø–∞—Ä–Ω–∏—Ö. –û–±–æ–≤'—è–∑–∫–æ–≤–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –º–µ—Ç–æ–¥ filter().

// const numbers = [17, 24, 82, 61, 36, 18, 47, 52, 73];
// // Change code below this line

// // const evenNumbers = numbers;
// // const oddNumbers = numbers;

// const evenNumbers = numbers.filter(number => number % 2 === 0);
// const oddNumbers = numbers.filter(number => !(number % 2 === 0));;

// console.log(numbers); // [17, 24, 82, 61, 36, 18, 47, 52, 73]
// console.log(evenNumbers); // [24, 82, 36, 18, 52]
// console.log(oddNumbers); // [17, 61, 47, 73]

// // üí° Task 20
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π allGenres –±—É–≤ –º–∞—Å–∏–≤ –≤—Å—ñ—Ö –∂–∞–Ω—Ä—ñ–≤ –∫–Ω–∏–≥ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å genres) –∑ –º–∞—Å–∏–≤—É books, –∞ —É –∑–º—ñ–Ω–Ω—ñ–π uniqueGenres - –º–∞—Å–∏–≤ —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∂–∞–Ω—Ä—ñ–≤, –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω—å.
// // –î–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó allGenders –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π –º–µ—Ç–æ–¥ flatMap()
// // –î–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó uniqueGenres –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π –º–µ—Ç–æ–¥ filter()

// const books = [
//   {
//     title: 'The Last Kingdom',
//     author: 'Bernard Cornwell',
//     genres: ['adventure', 'history'],
//   },
//   {
//     title: 'Beside Still Waters',
//     author: 'Robert Sheckley',
//     genres: ['fiction', 'mysticism'],
//   },
//   {
//     title: 'Redder Than Blood',
//     author: 'Tanith Lee',
//     genres: ['horror', 'mysticism', 'adventure'],
//   },
// ];
// // Change code below this line
// // const allGenres = books;
// // const uniqueGenres = allGenres;

// const allGenres = books.flatMap(book => book.genres);

// const uniqueGenres = allGenres.filter((genres, idx, array) => array.indexOf(genres)===idx);

// console.log(allGenres); // ["adventure", "history", "fiction", "mysticism", "horror", "mysticism", "adventure"]

// console.log(uniqueGenres); // ["adventure", "history", "fiction", "mysticism", "horror"]

// // üí° Task 21
// // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ filter(), –¥–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–±:

// const books = [
//   {
//     title: "The Last Kingdom",
//     author: "Bernard Cornwell",
//     rating: 8.38,
//   },
//   {
//     title: "Beside Still Waters",
//     author: "Robert Sheckley",
//     rating: 8.51,
//   },
//   {
//     title: "The Dream of a Ridiculous Man",
//     author: "Fyodor Dostoevsky",
//     rating: 7.75,
//   },
//   { title: "Redder Than Blood", author: "Tanith Lee", rating: 7.94 },
//   { title: "Enemy of God", author: "Bernard Cornwell", rating: 8.67 },
// ];

// const MIN_RATING = 8;
// const AUTHOR = "Bernard Cornwell";
// // Change code below this line

// // const topRatedBooks = books;
// // const booksByAuthor = books;

// const topRatedBooks = books.filter(book => book.rating > MIN_RATING);
// const booksByAuthor = books.filter(book => book.author === AUTHOR);

// console.log(topRatedBooks); // –º–∞—Å–∏–≤ –∫–Ω–∏–≥ –∑ —Ä–µ–π—Ç–∏–Ω–≥–æ–º, –≤–∏—â–∏–º –∑–∞ 8
// console.log(booksByAuthor); // –º–∞—Å–∏–≤ –∫–Ω–∏–≥, –∞–≤—Ç–æ—Ä —è–∫–∏—Ö "Bernard Cornwell"

// // üí° Task 22
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é getUsersWithEyeColor(users, color) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —É —è–∫–∏—Ö –∫–æ–ª—ñ—Ä –æ—á–µ–π(–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å eyeColor) –∑–±—ñ–≥–∞—î—Ç—å—Å—è –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ color.
// // –ó–º—ñ–Ω–Ω—ñ–π getUsersWithEyeColor –ø—Ä–∏—Å–≤–æ—î–Ω–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ (users, color)
// // –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥ filter()

// // Change code below this line
// // const getUsersWithEyeColor = (users, color) => {};

// const getUsersWithEyeColor = (users, color) =>
//   users.filter(user => user.eyeColor === color);
// ;

// // Change code above this line

// console.log(
//   getUsersWithEyeColor(
//     [
//       {
//         name: 'Moore Hensley',
//         email: 'moorehensley@indexia.com',
//         eyeColor: 'blue',
//         friends: ['Sharron Pace'],
//         isActive: false,
//         balance: 2811,
//         gender: 'male',
//       },
//       {
//         name: 'Sharlene Bush',
//         email: 'sharlenebush@tubesys.com',
//         eyeColor: 'blue',
//         friends: ['Briana Decker', 'Sharron Pace'],
//         isActive: true,
//         balance: 3821,
//         gender: 'female',
//       },
//       {
//         name: 'Ross Vazquez',
//         email: 'rossvazquez@xinware.com',
//         eyeColor: 'green',
//         friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//         isActive: false,
//         balance: 3793,
//         gender: 'male',
//       },
//       {
//         name: 'Elma Head',
//         email: 'elmahead@omatom.com',
//         eyeColor: 'green',
//         friends: ['Goldie Gentry', 'Aisha Tran'],
//         isActive: true,
//         balance: 2278,
//         gender: 'female',
//       },
//       {
//         name: 'Carey Barr',
//         email: 'careybarr@nurali.com',
//         eyeColor: 'blue',
//         friends: ['Jordan Sampson', 'Eddie Strong'],
//         isActive: true,
//         balance: 3951,
//         gender: 'male',
//       },
//       {
//         name: 'Blackburn Dotson',
//         email: 'blackburndotson@furnigeer.com',
//         eyeColor: 'brown',
//         friends: ['Jacklyn Lucas', 'Linda Chapman'],
//         isActive: false,
//         balance: 1498,
//         gender: 'male',
//       },
//       {
//         name: 'Sheree Anthony',
//         email: 'shereeanthony@kog.com',
//         eyeColor: 'brown',
//         friends: ['Goldie Gentry', 'Briana Decker'],
//         isActive: true,
//         balance: 2764,
//         gender: 'female',
//       },
//     ],
//     'brown'
//   )
// );

// // üí° Task 23
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é getUsersWithAge(users, minAge, maxAge) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –≤—ñ–∫ —è–∫–∏—Ö (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å age) –ø–æ—Ç—Ä–∞–ø–ª—è—î —É –ø—Ä–æ–º—ñ–∂–æ–∫ –≤—ñ–¥ minAge –¥–æ maxAge.
// // –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥ filter()

// // Change code below this line
// // const getUsersWithAge = (users, minAge, maxAge) => {};

// const getUsersWithAge = (users, minAge, maxAge) =>
//   users.filter(user => user.age > minAge && user.age < maxAge);
// // Change code above this line

// console.log(
//   getUsersWithAge(
//     [
//       {
//         name: 'Moore Hensley',
//         email: 'moorehensley@indexia.com',
//         eyeColor: 'blue',
//         friends: ['Sharron Pace'],
//         isActive: false,
//         balance: 2811,
//         gender: 'male',
//         age: 37,
//       },
//       {
//         name: 'Sharlene Bush',
//         email: 'sharlenebush@tubesys.com',
//         eyeColor: 'blue',
//         friends: ['Briana Decker', 'Sharron Pace'],
//         isActive: true,
//         balance: 3821,
//         gender: 'female',
//         age: 34,
//       },
//       {
//         name: 'Ross Vazquez',
//         email: 'rossvazquez@xinware.com',
//         eyeColor: 'green',
//         friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//         isActive: false,
//         balance: 3793,
//         gender: 'male',
//         age: 24,
//       },
//       {
//         name: 'Elma Head',
//         email: 'elmahead@omatom.com',
//         eyeColor: 'green',
//         friends: ['Goldie Gentry', 'Aisha Tran'],
//         isActive: true,
//         balance: 2278,
//         gender: 'female',
//         age: 21,
//       },
//       {
//         name: 'Carey Barr',
//         email: 'careybarr@nurali.com',
//         eyeColor: 'blue',
//         friends: ['Jordan Sampson', 'Eddie Strong'],
//         isActive: true,
//         balance: 3951,
//         gender: 'male',
//         age: 27,
//       },
//       {
//         name: 'Blackburn Dotson',
//         email: 'blackburndotson@furnigeer.com',
//         eyeColor: 'brown',
//         friends: ['Jacklyn Lucas', 'Linda Chapman'],
//         isActive: false,
//         balance: 1498,
//         gender: 'male',
//         age: 38,
//       },
//       {
//         name: 'Sheree Anthony',
//         email: 'shereeanthony@kog.com',
//         eyeColor: 'brown',
//         friends: ['Goldie Gentry', 'Briana Decker'],
//         isActive: true,
//         balance: 2764,
//         gender: 'female',
//         age: 39,
//       },
//     ],
//     80,
//     100
//   )
// ); // 20 —ñ 30 (Ross Vazquez, Elma Head —ñ Carey Barr) ; 30 —ñ 40 (Moore Hensley, Sharlene Bush, Blackburn Dotson, Sheree Anthony) ; 80 —ñ 100 ( [] )

// // üí° Task 24
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é getUsersWithFriend(users, friendName) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —É —è–∫–∏—Ö —î –æ–¥–∏–Ω –∑ —ñ–º'—è–º –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ friendName. –ú–∞—Å–∏–≤ –¥—Ä—É–∑—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ friends.
// // –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥ filter()

// // Change code below this line
// // const getUsersWithFriend = (users, friendName) => {};

// const getUsersWithFriend = (users, friendName) =>
//   users.filter(user => user.friends.includes(friendName));

// // Change code above this line

// console.log(
//   getUsersWithFriend(
//     [
//       {
//         name: 'Moore Hensley',
//         email: 'moorehensley@indexia.com',
//         eyeColor: 'blue',
//         friends: ['Sharron Pace'],
//         isActive: false,
//         balance: 2811,
//         gender: 'male',
//         age: 37,
//       },
//       {
//         name: 'Sharlene Bush',
//         email: 'sharlenebush@tubesys.com',
//         eyeColor: 'blue',
//         friends: ['Briana Decker', 'Sharron Pace'],
//         isActive: true,
//         balance: 3821,
//         gender: 'female',
//         age: 34,
//       },
//       {
//         name: 'Ross Vazquez',
//         email: 'rossvazquez@xinware.com',
//         eyeColor: 'green',
//         friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//         isActive: false,
//         balance: 3793,
//         gender: 'male',
//         age: 24,
//       },
//       {
//         name: 'Elma Head',
//         email: 'elmahead@omatom.com',
//         eyeColor: 'green',
//         friends: ['Goldie Gentry', 'Aisha Tran'],
//         isActive: true,
//         balance: 2278,
//         gender: 'female',
//         age: 21,
//       },
//       {
//         name: 'Carey Barr',
//         email: 'careybarr@nurali.com',
//         eyeColor: 'blue',
//         friends: ['Jordan Sampson', 'Eddie Strong'],
//         isActive: true,
//         balance: 3951,
//         gender: 'male',
//         age: 27,
//       },
//       {
//         name: 'Blackburn Dotson',
//         email: 'blackburndotson@furnigeer.com',
//         eyeColor: 'brown',
//         friends: ['Jacklyn Lucas', 'Linda Chapman'],
//         isActive: false,
//         balance: 1498,
//         gender: 'male',
//         age: 38,
//       },
//       {
//         name: 'Sheree Anthony',
//         email: 'shereeanthony@kog.com',
//         eyeColor: 'brown',
//         friends: ['Goldie Gentry', 'Briana Decker'],
//         isActive: true,
//         balance: 2764,
//         gender: 'female',
//         age: 39,
//       },
//     ],
//     'Briana Decker'
//   )
// );
// // use as friendName: "Briana Decker" (Sharlene Bush, Sheree Anthony), "Goldie Gentry" (Elma Head, Sheree Anthony), "Adrian Cross" ()

// // üí° Task 25
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é getFriends(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ –¥—Ä—É–∑—ñ–≤ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å friends). –£ –¥–µ–∫—ñ–ª—å–∫–æ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –æ–¥–Ω–∞–∫–æ–≤—ñ –¥—Ä—É–∑—ñ, –∑—Ä–æ–±–∏ —Ç–∞–∫, —â–æ–± –º–∞—Å–∏–≤, —â–æ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è, –Ω–µ –º—ñ—Å—Ç–∏–≤ –ø–æ–≤—Ç–æ—Ä–µ–Ω—å.

// // Change code below this line
// // const getFriends = (users) => {};

// const getFriends = users =>
//   users
//     .flatMap(user => user.friends)
//     .filter((friend, idx, array) => array.indexOf(friend) === idx);

// // Change code above this line

// console.log(
//   getFriends([
//     {
//       name: 'Moore Hensley',
//       email: 'moorehensley@indexia.com',
//       eyeColor: 'blue',
//       friends: ['Sharron Pace'],
//       isActive: false,
//       balance: 2811,
//       gender: 'male',
//       age: 37,
//     },
//     {
//       name: 'Sharlene Bush',
//       email: 'sharlenebush@tubesys.com',
//       eyeColor: 'blue',
//       friends: ['Briana Decker', 'Sharron Pace'],
//       isActive: true,
//       balance: 3821,
//       gender: 'female',
//       age: 34,
//     },
//     {
//       name: 'Ross Vazquez',
//       email: 'rossvazquez@xinware.com',
//       eyeColor: 'green',
//       friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//       isActive: false,
//       balance: 3793,
//       gender: 'male',
//       age: 24,
//     },
//     {
//       name: 'Elma Head',
//       email: 'elmahead@omatom.com',
//       eyeColor: 'green',
//       friends: ['Goldie Gentry', 'Aisha Tran'],
//       isActive: true,
//       balance: 2278,
//       gender: 'female',
//       age: 21,
//     },
//     {
//       name: 'Carey Barr',
//       email: 'careybarr@nurali.com',
//       eyeColor: 'blue',
//       friends: ['Jordan Sampson', 'Eddie Strong'],
//       isActive: true,
//       balance: 3951,
//       gender: 'male',
//       age: 27,
//     },
//     {
//       name: 'Blackburn Dotson',
//       email: 'blackburndotson@furnigeer.com',
//       eyeColor: 'brown',
//       friends: ['Jacklyn Lucas', 'Linda Chapman'],
//       isActive: false,
//       balance: 1498,
//       gender: 'male',
//       age: 38,
//     },
//     {
//       name: 'Sheree Anthony',
//       email: 'shereeanthony@kog.com',
//       eyeColor: 'brown',
//       friends: ['Goldie Gentry', 'Briana Decker'],
//       isActive: true,
//       balance: 2764,
//       gender: 'female',
//       age: 39,
//     },
//   ])
// ); // ["Sharron Pace", "Briana Decker", "Marilyn Mcintosh", "Padilla Garrison", "Naomi Buckner", "Goldie Gentry", "Aisha Tran", "Jordan Sampson", "Eddie Strong", "Jacklyn Lucas", "Linda Chapman"]

// // üí° Task 26
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é getActiveUsers(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ isActive —è–∫–∏—Ö - true. –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥ filter().

// // Change code below this line
// // const getActiveUsers = (users) => {};

// const getActiveUsers = users => users.filter((user) => user.isActive)

// // Change code above this line

// console.log(
//   getActiveUsers([
//     {
//       name: 'Moore Hensley',
//       email: 'moorehensley@indexia.com',
//       eyeColor: 'blue',
//       friends: ['Sharron Pace'],
//       isActive: false,
//       balance: 2811,
//       gender: 'male',
//       age: 37,
//     },
//     {
//       name: 'Sharlene Bush',
//       email: 'sharlenebush@tubesys.com',
//       eyeColor: 'blue',
//       friends: ['Briana Decker', 'Sharron Pace'],
//       isActive: true,
//       balance: 3821,
//       gender: 'female',
//       age: 34,
//     },
//     {
//       name: 'Ross Vazquez',
//       email: 'rossvazquez@xinware.com',
//       eyeColor: 'green',
//       friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//       isActive: false,
//       balance: 3793,
//       gender: 'male',
//       age: 24,
//     },
//     {
//       name: 'Elma Head',
//       email: 'elmahead@omatom.com',
//       eyeColor: 'green',
//       friends: ['Goldie Gentry', 'Aisha Tran'],
//       isActive: true,
//       balance: 2278,
//       gender: 'female',
//       age: 21,
//     },
//     {
//       name: 'Carey Barr',
//       email: 'careybarr@nurali.com',
//       eyeColor: 'blue',
//       friends: ['Jordan Sampson', 'Eddie Strong'],
//       isActive: true,
//       balance: 3951,
//       gender: 'male',
//       age: 27,
//     },
//     {
//       name: 'Blackburn Dotson',
//       email: 'blackburndotson@furnigeer.com',
//       eyeColor: 'brown',
//       friends: ['Jacklyn Lucas', 'Linda Chapman'],
//       isActive: false,
//       balance: 1498,
//       gender: 'male',
//       age: 38,
//     },
//     {
//       name: 'Sheree Anthony',
//       email: 'shereeanthony@kog.com',
//       eyeColor: 'brown',
//       friends: ['Goldie Gentry', 'Briana Decker'],
//       isActive: true,
//       balance: 2764,
//       gender: 'female',
//       age: 39,
//     },
//   ])
// ); // –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —ñ–º–µ–Ω–∞–º–∏ Sharlene Bush, Elma Head, Carey Barr —ñ Sheree Anthony

// // üí° Task 27
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é getInactiveUsers(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ isActive —è–∫–∏—Ö - false.
// // –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥ filter()

// // Change code below this line
// // const getInactiveUsers = (users) => {};

// const getInactiveUsers = users => users.filter(user => !(user.isActive));

// // Change code above this line

// console.log(
//   getInactiveUsers([
//     {
//       name: 'Moore Hensley',
//       email: 'moorehensley@indexia.com',
//       eyeColor: 'blue',
//       friends: ['Sharron Pace'],
//       isActive: false,
//       balance: 2811,
//       gender: 'male',
//       age: 37,
//     },
//     {
//       name: 'Sharlene Bush',
//       email: 'sharlenebush@tubesys.com',
//       eyeColor: 'blue',
//       friends: ['Briana Decker', 'Sharron Pace'],
//       isActive: true,
//       balance: 3821,
//       gender: 'female',
//       age: 34,
//     },
//     {
//       name: 'Ross Vazquez',
//       email: 'rossvazquez@xinware.com',
//       eyeColor: 'green',
//       friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//       isActive: false,
//       balance: 3793,
//       gender: 'male',
//       age: 24,
//     },
//     {
//       name: 'Elma Head',
//       email: 'elmahead@omatom.com',
//       eyeColor: 'green',
//       friends: ['Goldie Gentry', 'Aisha Tran'],
//       isActive: true,
//       balance: 2278,
//       gender: 'female',
//       age: 21,
//     },
//     {
//       name: 'Carey Barr',
//       email: 'careybarr@nurali.com',
//       eyeColor: 'blue',
//       friends: ['Jordan Sampson', 'Eddie Strong'],
//       isActive: true,
//       balance: 3951,
//       gender: 'male',
//       age: 27,
//     },
//     {
//       name: 'Blackburn Dotson',
//       email: 'blackburndotson@furnigeer.com',
//       eyeColor: 'brown',
//       friends: ['Jacklyn Lucas', 'Linda Chapman'],
//       isActive: false,
//       balance: 1498,
//       gender: 'male',
//       age: 38,
//     },
//     {
//       name: 'Sheree Anthony',
//       email: 'shereeanthony@kog.com',
//       eyeColor: 'brown',
//       friends: ['Goldie Gentry', 'Briana Decker'],
//       isActive: true,
//       balance: 2764,
//       gender: 'female',
//       age: 39,
//     },
//   ])
// ); //–º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —ñ–º–µ–Ω–∞–º–∏ Moore Hensley, Ross Vazquez —ñ Blackburn Dotson

// // üí° Task 28
// // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ find(), –¥–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–±:
// // –£ –∑–º—ñ–Ω–Ω—ñ–π bookWithTitle —É—Ç–≤–æ—Ä–∏–≤—Å—è –æ–±'—î–∫—Ç –∫–Ω–∏–≥–∏, –Ω–∞–∑–≤–∞ —è–∫–æ—ó (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å title) –∑–±—ñ–≥–∞—î—Ç—å—Å—è –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º –∑–º—ñ–Ω–Ω–æ—ó BOOK_TITLE.
// // –£ –∑–º—ñ–Ω–Ω—ñ–π bookByAuthor —É—Ç–≤–æ—Ä–∏–≤—Å—è –æ–±'—î–∫—Ç –∫–Ω–∏–≥–∏, –∞–≤—Ç–æ—Ä —è–∫–æ—ó (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å author) –∑–±—ñ–≥–∞—î—Ç—å—Å—è –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º –∑–º—ñ–Ω–Ω–æ—ó AUTHOR.

// const books = [
//   {
//     title: 'The Last Kingdom',
//     author: 'Bernard Cornwell',
//     rating: 8.38,
//   },
//   {
//     title: 'Beside Still Waters',
//     author: 'Robert Sheckley',
//     rating: 8.51,
//   },
//   {
//     title: 'The Dream of a Ridiculous Man',
//     author: 'Fyodor Dostoevsky',
//     rating: 7.75,
//   },
//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },
// ];
// const BOOK_TITLE = 'The Dream of a Ridiculous Man';
// const AUTHOR = 'Robert Sheckley';
// // Change code below this line

// const bookWithTitle = books.find(book => book.title === BOOK_TITLE);
// const bookByAuthor = books.find(book => book.author === AUTHOR);

// console.log(bookWithTitle); // –æ–±'—î–∫—Ç –∫–Ω–∏–≥–∏ –∑ –Ω–∞–∑–≤–æ—é –≤–∏—â–µ "The Dream of a Ridiculous Man"
// console.log(bookByAuthor); // –æ–±'—î–∫—Ç –∫–Ω–∏–≥–∏ –∞–≤—Ç–æ—Ä–∞ "Robert Sheckley"

// // üí° Task 29
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é getUserWithEmail(users, email) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –æ–±'—î–∫—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –ø–æ—à—Ç–∞ —è–∫–æ–≥–æ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å email) –∑–±—ñ–≥–∞—î—Ç—å—Å—è –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ email.

// // Change code below this line
// // const getUserWithEmail = (users, email) => {};

// const getUserWithEmail = (users, email) =>
//   users.find(user => user.email === email);

// // Change code above this line

// console.log(getUserWithEmail(
// [
//   {
//     name: "Moore Hensley",
//     email: "moorehensley@indexia.com",
//     eyeColor: "blue",
//     friends: ["Sharron Pace"],
//     isActive: false,
//     balance: 2811,
//     gender: "male"
//   },
//   {
//     name: "Sharlene Bush",
//     email: "sharlenebush@tubesys.com",
//     eyeColor: "blue",
//     friends: ["Briana Decker", "Sharron Pace"],
//     isActive: true,
//     balance: 3821,
//     gender: "female"
//   },
//   {
//     name: "Ross Vazquez",
//     email: "rossvazquez@xinware.com",
//     eyeColor: "green",
//     friends: ["Marilyn Mcintosh", "Padilla Garrison", "Naomi Buckner"],
//     isActive: false,
//     balance: 3793,
//     gender: "male"
//   },
//   {
//     name: "Elma Head",
//     email: "elmahead@omatom.com",
//     eyeColor: "green",
//     friends: ["Goldie Gentry", "Aisha Tran"],
//     isActive: true,
//     balance: 2278,
//     gender: "female"
//   },
//   {
//     name: "Carey Barr",
//     email: "careybarr@nurali.com",
//     eyeColor: "blue",
//     friends: ["Jordan Sampson", "Eddie Strong"],
//     isActive: true,
//     balance: 3951,
//     gender: "male"
//   },
//   {
//     name: "Blackburn Dotson",
//     email: "blackburndotson@furnigeer.com",
//     eyeColor: "brown",
//     friends: ["Jacklyn Lucas", "Linda Chapman"],
//     isActive: false,
//     balance: 1498,
//     gender: "male"
//   },
//   {
//     name: "Sheree Anthony",
//     email: "shereeanthony@kog.com",
//     eyeColor: "brown",
//     friends: ["Goldie Gentry", "Briana Decker"],
//     isActive: true,
//     balance: 2764,
//     gender: "female"
//   }
// ], "shereeanthony@kog.com" // "elmahead@omatom.com" , "blackburndotson@furnigeer.com"
// ));

// // üí° Task 30
// // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ every(), –¥–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–±:

// const firstArray = [26, 94, 36, 18];
// const secondArray = [17, 61, 23];
// const thirdArray = [17, 26, 94, 61, 36, 23, 18];
// // Change code below this line

// // const eachElementInFirstIsEven = firstArray; // —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É firstArray –Ω–∞ –ø–∞—Ä–Ω—ñ—Å—Ç—å.
// // const eachElementInFirstIsOdd = firstArray; // —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É firstArray –Ω–∞ –Ω–µ–ø–∞—Ä–Ω—ñ—Å—Ç—å.

// // const eachElementInSecondIsEven = secondArray; // —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É secondArray –Ω–∞ –ø–∞—Ä–Ω—ñ—Å—Ç—å.
// // const eachElementInSecondIsOdd = secondArray; // —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É secondArray –Ω–∞ –Ω–µ–ø–∞—Ä–Ω—ñ—Å—Ç—å.

// // const eachElementInThirdIsEven = thirdArray; // —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É thirdArray –Ω–∞ –ø–∞—Ä–Ω—ñ—Å—Ç—å.
// // const eachElementInThirdIsOdd = thirdArray; // —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É thirdArray –Ω–∞ –Ω–µ–ø–∞—Ä–Ω—ñ—Å—Ç—å.

// const eachElementInFirstIsEven = firstArray.every(number => !(number % 2));
// const eachElementInFirstIsOdd = firstArray.every(number => !!(number % 2));

// const eachElementInSecondIsEven = secondArray.every(number => !(number % 2));
// const eachElementInSecondIsOdd = secondArray.every(number => !!(number % 2));

// const eachElementInThirdIsEven = thirdArray.every(number => !(number % 2));
// const eachElementInThirdIsOdd = thirdArray.every(number => !!(number % 2));

// console.log(eachElementInFirstIsEven); // true
// console.log(eachElementInFirstIsOdd); // false
// console.log(eachElementInSecondIsEven); // false
// console.log(eachElementInSecondIsOdd); // true
// console.log(eachElementInThirdIsEven); // false
// console.log(eachElementInThirdIsOdd); // false

// // üí° Task 31
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é isEveryUserActive(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è–ª–∞, —á–∏ –≤—Å—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –∑–∞—Ä–∞–∑ –∞–∫—Ç–∏–≤–Ω—ñ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å isActive) —ñ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ true –∞–±–æ false. –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥ every().

// // Change code below this line
// // const isEveryUserActive = (users) => {};

// const isEveryUserActive = users => users.every(user => user.isActive);

// // Change code above this line

// console.log(isEveryUserActive([
//     {
//         name: "Moore Hensley",
//         email: "moorehensley@indexia.com",
//         eyeColor: "blue",
//         friends: ["Sharron Pace"],
//         isActive: false,
//         balance: 2811,
//         gender: "male"
//     },
//     {
//         name: "Sharlene Bush",
//         email: "sharlenebush@tubesys.com",
//         eyeColor: "blue",
//         friends: ["Briana Decker", "Sharron Pace"],
//         isActive: true,
//         balance: 3821,
//         gender: "female"
//     },
//     {
//         name: "Ross Vazquez",
//         email: "rossvazquez@xinware.com",
//         eyeColor: "green",
//         friends: ["Marilyn Mcintosh", "Padilla Garrison", "Naomi Buckner"],
//         isActive: false,
//         balance: 3793,
//         gender: "male"
//     },
//     {
//         name: "Elma Head",
//         email: "elmahead@omatom.com",
//         eyeColor: "green",
//         friends: ["Goldie Gentry", "Aisha Tran"],
//         isActive: true,
//         balance: 2278,
//         gender: "female"
//     },
//     {
//         name: "Carey Barr",
//         email: "careybarr@nurali.com",
//         eyeColor: "blue",
//         friends: ["Jordan Sampson", "Eddie Strong"],
//         isActive: true,
//         balance: 3951,
//         gender: "male"
//     },
//     {
//         name: "Blackburn Dotson",
//         email: "blackburndotson@furnigeer.com",
//         eyeColor: "brown",
//         friends: ["Jacklyn Lucas", "Linda Chapman"],
//         isActive: false,
//         balance: 1498,
//         gender: "male"
//     },
//     {
//         name: "Sheree Anthony",
//         email: "shereeanthony@kog.com",
//         eyeColor: "brown",
//         friends: ["Goldie Gentry", "Briana Decker"],
//         isActive: true,
//         balance: 2764,
//         gender: "female"
//     }
// ])); // false

// // üí° Task 32
// // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ some(), –¥–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–±:

// const firstArray = [26, 94, 36, 18];
// const secondArray = [17, 61, 23];
// const thirdArray = [17, 26, 94, 61, 36, 23, 18];
// // Change below this line

// // const anyElementInFirstIsEven = firstArray; // —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –ø–∞—Ä–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ –º–∞—Å–∏–≤—ñ firstArray.
// // const anyElementInFirstIsOdd = firstArray; // —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–µ–ø–∞—Ä–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ –º–∞—Å–∏–≤—ñ firstArray.

// // const anyElementInSecondIsEven = secondArray; // —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –ø–∞—Ä–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ –º–∞—Å–∏–≤—ñ secondArray.
// // const anyElementInSecondIsOdd = secondArray; // —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–µ–ø–∞—Ä–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ –º–∞—Å–∏–≤—ñ secondArray.

// // const anyElementInThirdIsEven = thirdArray; // —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –ø–∞—Ä–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ –º–∞—Å–∏–≤—ñ thirdArray.
// // const anyElementInThirdIsOdd = thirdArray; // —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–µ–ø–∞—Ä–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ –º–∞—Å–∏–≤—ñ thirdArray.

// const anyElementInFirstIsEven = firstArray.some(number => !(number % 2));
// const anyElementInFirstIsOdd = firstArray.some(number => !!(number % 2));

// const anyElementInSecondIsEven = secondArray.some(number => !(number % 2));
// const anyElementInSecondIsOdd = secondArray.some(number => !!(number % 2));

// const anyElementInThirdIsEven = thirdArray.some(number => !(number % 2));
// const anyElementInThirdIsOdd = thirdArray.some(number => !!(number % 2));

// console.log(anyElementInFirstIsEven); // true
// console.log(anyElementInFirstIsOdd); // false
// console.log(anyElementInSecondIsEven); // false
// console.log(anyElementInSecondIsOdd); // true
// console.log(anyElementInThirdIsEven); // true
// console.log(anyElementInThirdIsOdd); // true

// // üí° Task 33
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é isAnyUserActive(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è–ª–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å isActive) —ñ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ true –∞–±–æ false.

// // Change code below this line
// // const isAnyUserActive = users => {};

// const isAnyUserActive = users => users.some(user => user.isActive);

// // Change code above this line

// console.log(
//   isAnyUserActive([
//     {
//       name: 'Moore Hensley',
//       email: 'moorehensley@indexia.com',
//       eyeColor: 'blue',
//       friends: ['Sharron Pace'],
//       isActive: false,
//       balance: 2811,
//       gender: 'male',
//     },
//     {
//       name: 'Sharlene Bush',
//       email: 'sharlenebush@tubesys.com',
//       eyeColor: 'blue',
//       friends: ['Briana Decker', 'Sharron Pace'],
//       isActive: true,
//       balance: 3821,
//       gender: 'female',
//     },
//     {
//       name: 'Ross Vazquez',
//       email: 'rossvazquez@xinware.com',
//       eyeColor: 'green',
//       friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//       isActive: false,
//       balance: 3793,
//       gender: 'male',
//     },
//     {
//       name: 'Elma Head',
//       email: 'elmahead@omatom.com',
//       eyeColor: 'green',
//       friends: ['Goldie Gentry', 'Aisha Tran'],
//       isActive: true,
//       balance: 2278,
//       gender: 'female',
//     },
//     {
//       name: 'Carey Barr',
//       email: 'careybarr@nurali.com',
//       eyeColor: 'blue',
//       friends: ['Jordan Sampson', 'Eddie Strong'],
//       isActive: true,
//       balance: 3951,
//       gender: 'male',
//     },
//     {
//       name: 'Blackburn Dotson',
//       email: 'blackburndotson@furnigeer.com',
//       eyeColor: 'brown',
//       friends: ['Jacklyn Lucas', 'Linda Chapman'],
//       isActive: false,
//       balance: 1498,
//       gender: 'male',
//     },
//     {
//       name: 'Sheree Anthony',
//       email: 'shereeanthony@kog.com',
//       eyeColor: 'brown',
//       friends: ['Goldie Gentry', 'Briana Decker'],
//       isActive: true,
//       balance: 2764,
//       gender: 'female',
//     },
//   ])
// ); // true

// // üí° Task 34
// // –Ü–≥—Ä–æ–≤–æ–º—É —Å–µ—Ä–≤—ñ—Å—É –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ —á–∞—Å—É, –ø—Ä–æ–≤–µ–¥–µ–Ω–æ–≥–æ –≤ —ñ–≥—Ä–∞—Ö. –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π totalPlayTime –≤–∏–π—à–ª–æ –∑–∞–≥–∞–ª—å–Ω–∏–π —ñ–≥—Ä–æ–≤–∏–π —á–∞—Å –∑ –º–∞—Å–∏–≤—É playtimes. –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –º–∞—Å–∏–≤—É playtimes –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥ reduce()

// const players = {
//   mango: 1270,
//   poly: 468,
//   ajax: 710,
//   kiwi: 244,
// };
// const playtimes = Object.values(players); // [1270, 468, 710, 244]
// // Change code below this line

// // const totalPlayTime = playtimes;

// const totalPlayTime = playtimes.reduce(
//   (previousValue, number) => previousValue + number);

// // Change code above this line
// const averagePlayTime = totalPlayTime / playtimes.length;

// console.log(players); // –æ–±'—î–∫—Ç –≥—Ä–∞–≤—Ü—ñ–≤ –∑ —ñ–≥—Ä–æ–≤–∏–º —á–∞—Å–æ–º –∫–æ–∂–Ω–æ–≥–æ
// console.log(playtimes); // [1270, 468, 710, 244]
// console.log(totalPlayTime); // 2692
// console.log(averagePlayTime); // 673

// // üí° Task 35
// // –ù–∞—à–æ–º—É —Å–µ—Ä–≤—ñ—Å—É –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Ä–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å–µ—Ä–µ–¥–Ω—ñ–π —á–∞—Å, –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–π –≤ –æ–¥–Ω—ñ–π –≥—Ä—ñ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –≥—Ä–∞–≤—Ü—è, —ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É —Ü–∏—Ö –∑–Ω–∞—á–µ–Ω—å —á–∞—Å—É.–†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ —á–∞—Å –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∑ –≥—Ä–∞–≤—Ü—ñ–≤ –º–æ–∂–Ω–∞, —Ä–æ–∑–¥—ñ–ª–∏–≤—à–∏ –π–æ–≥–æ —á–∞—Å(–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å playtime) –Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–≥–æ—Ä(–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å gamesPlayed). –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –º–∞—Å–∏–≤—É players –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥ reduce()

// const players = [
//   { name: 'Mango', playtime: 1270, gamesPlayed: 4 },
//   { name: 'Poly', playtime: 469, gamesPlayed: 2 },
//   { name: 'Ajax', playtime: 690, gamesPlayed: 3 },
//   { name: 'Kiwi', playtime: 241, gamesPlayed: 1 },
// ];
// // Change code below this line

// // const totalAveragePlaytimePerGame = players.reduce((acc, player) => {
// //     return acc + player.playtime / player.gamesPlayed;
// // }, 0);

// const totalAveragePlaytimePerGame = players.reduce((acc, player) =>
//    acc + player.playtime / player.gamesPlayed
// , 0);

// console.log(players); // –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ –≥—Ä–∞–≤—Ü—ñ–≤
// console.log(totalAveragePlaytimePerGame); // 1023

// // üí° Task 36
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é calculateTotalBalance(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ —Ä–∞—Ö—É–≤–∞–ª–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ —Å—É–º—É –≤—Å—ñ—Ö –∫–æ—à—Ç—ñ–≤ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å balance), —è–∫—ñ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –∑ –º–∞—Å–∏–≤—É users. –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥ reduce()

// // Change code below this line
// // const calculateTotalBalance = users => {};

// const calculateTotalBalance = users => users.reduce((total, user) => total + user.balance, 0);

// // Change code above this line

// console.log(
//   calculateTotalBalance([
//     {
//       name: 'Moore Hensley',
//       email: 'moorehensley@indexia.com',
//       eyeColor: 'blue',
//       friends: ['Sharron Pace'],
//       isActive: false,
//       balance: 2811,
//       gender: 'male',
//     },
//     {
//       name: 'Sharlene Bush',
//       email: 'sharlenebush@tubesys.com',
//       eyeColor: 'blue',
//       friends: ['Briana Decker', 'Sharron Pace'],
//       isActive: true,
//       balance: 3821,
//       gender: 'female',
//     },
//     {
//       name: 'Ross Vazquez',
//       email: 'rossvazquez@xinware.com',
//       eyeColor: 'green',
//       friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//       isActive: false,
//       balance: 3793,
//       gender: 'male',
//     },
//     {
//       name: 'Elma Head',
//       email: 'elmahead@omatom.com',
//       eyeColor: 'green',
//       friends: ['Goldie Gentry', 'Aisha Tran'],
//       isActive: true,
//       balance: 2278,
//       gender: 'female',
//     },
//     {
//       name: 'Carey Barr',
//       email: 'careybarr@nurali.com',
//       eyeColor: 'blue',
//       friends: ['Jordan Sampson', 'Eddie Strong'],
//       isActive: true,
//       balance: 3951,
//       gender: 'male',
//     },
//     {
//       name: 'Blackburn Dotson',
//       email: 'blackburndotson@furnigeer.com',
//       eyeColor: 'brown',
//       friends: ['Jacklyn Lucas', 'Linda Chapman'],
//       isActive: false,
//       balance: 1498,
//       gender: 'male',
//     },
//     {
//       name: 'Sheree Anthony',
//       email: 'shereeanthony@kog.com',
//       eyeColor: 'brown',
//       friends: ['Goldie Gentry', 'Briana Decker'],
//       isActive: true,
//       balance: 2764,
//       gender: 'female',
//     },
//   ])
// ); // 20916

// // üí° Task 37
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é getTotalFriendCount(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ —Ä–∞—Ö—É–≤–∞–ª–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥—Ä—É–∑—ñ–≤ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å friends) —É—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –º–∞—Å–∏–≤—É users. –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥ reduce()

// // Change code below this line
// // const getTotalFriendCount = users => {};

// const getTotalFriendCount = users =>
//   users.reduce((acc, user) => acc + user.friends.length, 0);

// // Change code above this line

// console.log(
//   getTotalFriendCount([
//     {
//       name: 'Moore Hensley',
//       email: 'moorehensley@indexia.com',
//       eyeColor: 'blue',
//       friends: ['Sharron Pace'],
//       isActive: false,
//       balance: 2811,
//       gender: 'male',
//     },
//     {
//       name: 'Sharlene Bush',
//       email: 'sharlenebush@tubesys.com',
//       eyeColor: 'blue',
//       friends: ['Briana Decker', 'Sharron Pace'],
//       isActive: true,
//       balance: 3821,
//       gender: 'female',
//     },
//     {
//       name: 'Ross Vazquez',
//       email: 'rossvazquez@xinware.com',
//       eyeColor: 'green',
//       friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//       isActive: false,
//       balance: 3793,
//       gender: 'male',
//     },
//     {
//       name: 'Elma Head',
//       email: 'elmahead@omatom.com',
//       eyeColor: 'green',
//       friends: ['Goldie Gentry', 'Aisha Tran'],
//       isActive: true,
//       balance: 2278,
//       gender: 'female',
//     },
//     {
//       name: 'Carey Barr',
//       email: 'careybarr@nurali.com',
//       eyeColor: 'blue',
//       friends: ['Jordan Sampson', 'Eddie Strong'],
//       isActive: true,
//       balance: 3951,
//       gender: 'male',
//     },
//     {
//       name: 'Blackburn Dotson',
//       email: 'blackburndotson@furnigeer.com',
//       eyeColor: 'brown',
//       friends: ['Jacklyn Lucas', 'Linda Chapman'],
//       isActive: false,
//       balance: 1498,
//       gender: 'male',
//     },
//     {
//       name: 'Sheree Anthony',
//       email: 'shereeanthony@kog.com',
//       eyeColor: 'brown',
//       friends: ['Goldie Gentry', 'Briana Decker'],
//       isActive: true,
//       balance: 2764,
//       gender: 'female',
//     },
//   ])); // 14

// // üí° Task 38
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π ascendingReleaseDates –≤–∏–π—à–ª–∞ –∫–æ–ø—ñ—è –º–∞—Å–∏–≤—É releaseDates, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∞ –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º, –∞ —É –∑–º—ñ–Ω–Ω—ñ–π alphabeticalAuthors - –∫–æ–ø—ñ—è –º–∞—Å–∏–≤—É —ñ–º–µ–Ω –∞–≤—Ç–æ—Ä—ñ–≤ authors, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∞ –∑–∞ –∞–ª—Ñ–∞–≤—ñ—Ç–æ–º. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π –º–µ—Ç–æ–¥ sort()

// const releaseDates = [2016, 1967, 2008, 1984, 1973, 2012, 1997];
// const authors = [
//   'Tanith Lee',
//   'Bernard Cornwell',
//   'Robert Sheckley',
//   'Fyodor Dostoevsky',
// ];
// // Change code below this line
// // const ascendingReleaseDates = releaseDates;
// // const alphabeticalAuthors = authors;

// const ascendingReleaseDates = [...releaseDates].sort();

// const alphabeticalAuthors = [...authors].sort();

// console.log(releaseDates); // [2016, 1967, 2008, 1984, 1973, 2012, 1997]
// console.log(authors); // ['Tanith Lee', 'Bernard Cornwell', 'Robert Sheckley', 'Fyodor Dostoevsky']
// console.log(ascendingReleaseDates); // [1967, 1973, 1984, 1997, 2008, 2012, 2016]
// console.log(alphabeticalAuthors); // ['Bernard Cornwell', 'Fyodor Dostoevsky', 'Robert Sheckley', 'Tanith Lee']

// // üí° Task 39
// // –û–Ω–ª–∞–π–Ω –±—ñ–±—ñ–ª—ñ–æ—Ç–µ—Ü—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ –∫–Ω–∏–≥–∏, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω—ñ –∑–∞ –¥–∞—Ç–æ—é –≤–∏–¥–∞–Ω–Ω—è, –∑–∞ —ó—ó –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º –∞–±–æ —Å–ø–∞–¥–∞–Ω–Ω—è–º. –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π ascendingReleaseDates –≤–∏–π—à–ª–∞ –∫–æ–ø—ñ—è –º–∞—Å–∏–≤—É releaseDates, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∞ –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º, –∞ —É –∑–º—ñ–Ω–Ω—ñ–π descendingReleaseDates - –∫–æ–ø—ñ—è, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∞ –∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π –º–µ—Ç–æ–¥ sort()

// const releaseDates = [2016, 1967, 2008, 1984, 1973, 2012, 1997];
// // Change code below this line
// // const ascendingReleaseDates = releaseDates;
// // const descendingReleaseDates = releaseDates;

// const ascendingReleaseDates = [...releaseDates].sort((a, b) => a - b); // –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º

// const descendingReleaseDates = [...releaseDates].sort((a, b) => b - a); // –∑–∞ —Å–ø–∞–¥—ñ–Ω–Ω—è–º

// console.log(releaseDates); // [2016, 1967, 2008, 1984, 1973, 2012, 1997]
// console.log(ascendingReleaseDates); // [1967, 1973, 1984, 1997, 2008, 2012, 2016]
// console.log(descendingReleaseDates); // [2016, 2012, 2008, 1997, 1984, 1973, 1967]

// // üí° Task 40
// // –û–Ω–ª–∞–π–Ω –±—ñ–±—ñ–ª—ñ–æ—Ç–µ—Ü—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ –∫–Ω–∏–≥–∏, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω—ñ –∑–∞ –∞–≤—Ç–æ—Ä–æ–º, –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É —ñ –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É. –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π authorsInAlphabetOrder –≤–∏–π—à–ª–∞ –∫–æ–ø—ñ—è –º–∞—Å–∏–≤—É authors, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∞ –∑–∞ –∞–ª—Ñ–∞–≤—ñ—Ç–æ–º, –∞ —É –∑–º—ñ–Ω–Ω—ñ–π authorsInReversedOrder - –∫–æ–ø—ñ—è, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∞ —É –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π –º–µ—Ç–æ–¥ sort() —ñ –º–µ—Ç–æ–¥ —Ä—è–¥–∫—ñ–≤ localeCompare()

// const authors = [
//   'Tanith Lee',
//   'Bernard Cornwell',
//   'Robert Sheckley',
//   'Fyodor Dostoevsky',
//   'Howard Lovecraft',
// ];
// // Change code below this line
// // const authorsInAlphabetOrder = authors;
// // const authorsInReversedOrder = authors;

// const authorsInAlphabetOrder = [...authors].sort((a, b) => a.localeCompare(b)); // –∑–∞ –∞–ª—Ñ–∞–≤—ñ—Ç–æ–º

// const authorsInReversedOrder = [...authors].sort((a, b) => b.localeCompare(a)); // –≤ –∑–≤–æ—Ä–æ—Ç–Ω—å–æ–º—É –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É

// console.log(authors); // ["Tanith Lee", "Bernard Cornwell", "Robert Sheckley", "Fyodor Dostoevsky", "Howard Lovecraft"]
// console.log(authorsInAlphabetOrder); // ["Bernard Cornwell", "Fyodor Dostoevsky", "Howard Lovecraft", "Robert Sheckley", "Tanith Lee"]
// console.log(authorsInReversedOrder); // ["Tanith Lee", "Robert Sheckley", "Howard Lovecraft", "Fyodor Dostoevsky", "Bernard Cornwell"]

// // üí° Task 41
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–±. –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –º–∞—Å–∏–≤—É books –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥ sort()

// const books = [
//   {
//     title: 'The Last Kingdom',
//     author: 'Bernard Cornwell',
//     rating: 8.38,
//   },
//   {
//     title: 'Beside Still Waters',
//     author: 'Robert Sheckley',
//     rating: 8.51,
//   },
//   {
//     title: 'The Dream of a Ridiculous Man',
//     author: 'Fyodor Dostoevsky',
//     rating: 7.75,
//   },
//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },
//   { title: 'Enemy of God', author: 'Bernard Cornwell', rating: 8.67 },
// ];
// // Change code below this line
// // const sortedByAuthorName = books; // –∑–∞ —ñ–º'—è–º –∞–≤—Ç–æ—Ä–∞ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É
// // const sortedByReversedAuthorName = books; // –∑–∞ —ñ–º'—è–º –∞–≤—Ç–æ—Ä–∞ —É –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É
// // const sortedByAscendingRating = books; // –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º —Ä–µ–π—Ç–∏–Ω–≥—É
// // const sortedByDescentingRating = books; // –∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º —Ä–µ–π—Ç–∏–Ω–≥—É

// const sortedByAuthorName = [...books].sort((firstBook, secondBook) => firstBook.author.localeCompare(secondBook.author));

// const sortedByReversedAuthorName = [...books].sort((firstBook, secondBook) => secondBook.author.localeCompare(firstBook.author));

// const sortedByAscendingRating = [...books].sort((firstBook, secondBook) => firstBook.rating - secondBook.rating);

// const sortedByDescentingRating = [...books].sort((firstBook, secondBook) => secondBook.rating - firstBook.rating);

// console.log(books); // –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ –∫–Ω–∏–≥
// console.log(sortedByAuthorName); // –º–∞—Å–∏–≤ –∫–Ω–∏–≥, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ —ñ–º'—è–º –∞–≤—Ç–æ—Ä–∞ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É
// console.log(sortedByReversedAuthorName); // –º–∞—Å–∏–≤ –∫–Ω–∏–≥, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ —ñ–º'—è–º –∞–≤—Ç–æ—Ä–∞ —É –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É
// console.log(sortedByAscendingRating); // –º–∞—Å–∏–≤ –∫–Ω–∏–≥, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º —Ä–µ–π—Ç–∏–Ω–≥—É
// console.log(sortedByDescentingRating); // –º–∞—Å–∏–≤ –∫–Ω–∏–≥, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º —Ä–µ–π—Ç–∏–Ω–≥—É

// // üí° Task 42
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é sortByAscendingBalance(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º —ó—Ö –±–∞–ª–∞–Ω—Å—É (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å balance). –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π –º–µ—Ç–æ–¥ sort(). –ó–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è. –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó —ñ–∑ –∑–∞–∑–Ω–∞—á–µ–Ω–∏–º –º–∞—Å–∏–≤–æ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º —ó—Ö –±–∞–ª–∞–Ω—Å—É

// // Change code below this line
// // const sortByAscendingBalance = users => {};

// const sortByAscendingBalance = users => [...users].sort((firstUser, secondUser) => firstUser.balance - secondUser.balance);

// // Change code above this line

// console.log(
//   sortByAscendingBalance([
//     {
//       name: 'Moore Hensley',
//       email: 'moorehensley@indexia.com',
//       eyeColor: 'blue',
//       friends: ['Sharron Pace'],
//       isActive: false,
//       balance: 2811,
//       gender: 'male',
//     },
//     {
//       name: 'Sharlene Bush',
//       email: 'sharlenebush@tubesys.com',
//       eyeColor: 'blue',
//       friends: ['Briana Decker', 'Sharron Pace'],
//       isActive: true,
//       balance: 3821,
//       gender: 'female',
//     },
//     {
//       name: 'Ross Vazquez',
//       email: 'rossvazquez@xinware.com',
//       eyeColor: 'green',
//       friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//       isActive: false,
//       balance: 3793,
//       gender: 'male',
//     },
//     {
//       name: 'Elma Head',
//       email: 'elmahead@omatom.com',
//       eyeColor: 'green',
//       friends: ['Goldie Gentry', 'Aisha Tran'],
//       isActive: true,
//       balance: 2278,
//       gender: 'female',
//     },
//     {
//       name: 'Carey Barr',
//       email: 'careybarr@nurali.com',
//       eyeColor: 'blue',
//       friends: ['Jordan Sampson', 'Eddie Strong'],
//       isActive: true,
//       balance: 3951,
//       gender: 'male',
//     },
//     {
//       name: 'Blackburn Dotson',
//       email: 'blackburndotson@furnigeer.com',
//       eyeColor: 'brown',
//       friends: ['Jacklyn Lucas', 'Linda Chapman'],
//       isActive: false,
//       balance: 1498,
//       gender: 'male',
//     },
//     {
//       name: 'Sheree Anthony',
//       email: 'shereeanthony@kog.com',
//       eyeColor: 'brown',
//       friends: ['Goldie Gentry', 'Briana Decker'],
//       isActive: true,
//       balance: 2764,
//       gender: 'female',
//     },
//   ])
// );

// // üí° Task 43
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é sortByDescendingFriendCount(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —ó—Ö–Ω—ñ—Ö –¥—Ä—É–∑—ñ–≤ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å friends). –ó–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è. –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π –º–µ—Ç–æ–¥ sort().

// // Change code below this line
// // const sortByDescendingFriendCount = users => {};

// const sortByDescendingFriendCount = users =>
//   [...users].sort(
//     (firstUser, secondUser) =>
//      secondUser.friends.length  - firstUser.friends.length
//   );

// // Change code above this line

// console.log(
//   sortByDescendingFriendCount([
//     {
//       name: 'Moore Hensley',
//       email: 'moorehensley@indexia.com',
//       eyeColor: 'blue',
//       friends: ['Sharron Pace'],
//       isActive: false,
//       balance: 2811,
//       gender: 'male',
//     },
//     {
//       name: 'Sharlene Bush',
//       email: 'sharlenebush@tubesys.com',
//       eyeColor: 'blue',
//       friends: ['Briana Decker', 'Sharron Pace'],
//       isActive: true,
//       balance: 3821,
//       gender: 'female',
//     },
//     {
//       name: 'Ross Vazquez',
//       email: 'rossvazquez@xinware.com',
//       eyeColor: 'green',
//       friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//       isActive: false,
//       balance: 3793,
//       gender: 'male',
//     },
//     {
//       name: 'Elma Head',
//       email: 'elmahead@omatom.com',
//       eyeColor: 'green',
//       friends: ['Goldie Gentry', 'Aisha Tran'],
//       isActive: true,
//       balance: 2278,
//       gender: 'female',
//     },
//     {
//       name: 'Carey Barr',
//       email: 'careybarr@nurali.com',
//       eyeColor: 'blue',
//       friends: ['Jordan Sampson', 'Eddie Strong'],
//       isActive: true,
//       balance: 3951,
//       gender: 'male',
//     },
//     {
//       name: 'Blackburn Dotson',
//       email: 'blackburndotson@furnigeer.com',
//       eyeColor: 'brown',
//       friends: ['Jacklyn Lucas', 'Linda Chapman'],
//       isActive: false,
//       balance: 1498,
//       gender: 'male',
//     },
//     {
//       name: 'Sheree Anthony',
//       email: 'shereeanthony@kog.com',
//       eyeColor: 'brown',
//       friends: ['Goldie Gentry', 'Briana Decker'],
//       isActive: true,
//       balance: 2764,
//       gender: 'female',
//     },
//   ])
// );

// // üí° Task 44
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é sortByName(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ —ó—Ö —ñ–º'—è–º (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å name) –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É. –ó–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è. –î–ª—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π –º–µ—Ç–æ–¥ sort()

// // Change code below this line
// // const sortByName = users => {};

// const sortByName = users => [...users].sort((firstUser, seconUser) => firstUser.name.localeCompare(seconUser.name));

// // Change code above this line

// console.log(
//   sortByName([
//     {
//       name: 'Moore Hensley',
//       email: 'moorehensley@indexia.com',
//       eyeColor: 'blue',
//       friends: ['Sharron Pace'],
//       isActive: false,
//       balance: 2811,
//       gender: 'male',
//     },
//     {
//       name: 'Sharlene Bush',
//       email: 'sharlenebush@tubesys.com',
//       eyeColor: 'blue',
//       friends: ['Briana Decker', 'Sharron Pace'],
//       isActive: true,
//       balance: 3821,
//       gender: 'female',
//     },
//     {
//       name: 'Ross Vazquez',
//       email: 'rossvazquez@xinware.com',
//       eyeColor: 'green',
//       friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//       isActive: false,
//       balance: 3793,
//       gender: 'male',
//     },
//     {
//       name: 'Elma Head',
//       email: 'elmahead@omatom.com',
//       eyeColor: 'green',
//       friends: ['Goldie Gentry', 'Aisha Tran'],
//       isActive: true,
//       balance: 2278,
//       gender: 'female',
//     },
//     {
//       name: 'Carey Barr',
//       email: 'careybarr@nurali.com',
//       eyeColor: 'blue',
//       friends: ['Jordan Sampson', 'Eddie Strong'],
//       isActive: true,
//       balance: 3951,
//       gender: 'male',
//     },
//     {
//       name: 'Blackburn Dotson',
//       email: 'blackburndotson@furnigeer.com',
//       eyeColor: 'brown',
//       friends: ['Jacklyn Lucas', 'Linda Chapman'],
//       isActive: false,
//       balance: 1498,
//       gender: 'male',
//     },
//     {
//       name: 'Sheree Anthony',
//       email: 'shereeanthony@kog.com',
//       eyeColor: 'brown',
//       friends: ['Goldie Gentry', 'Briana Decker'],
//       isActive: true,
//       balance: 2764,
//       gender: 'female',
//     },
//   ])
// );

// // üí° Task 45
// // –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π names –≤–∏–π—à–æ–≤ –º–∞—Å–∏–≤ —ñ–º–µ–Ω –∞–≤—Ç–æ—Ä—ñ–≤ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É, —Ä–µ–π—Ç–∏–Ω–≥ –∫–Ω–∏–≥ —è–∫–∏—Ö –±—ñ–ª—å—à–∏–π –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó MIN_BOOK_RATING. –í—ñ–¥—Å—É—Ç–Ω—ñ –æ–≥–æ–ª–æ—à–µ–Ω—ñ –∑–º—ñ–Ω–Ω—ñ, –∫—Ä—ñ–º books, MIN_BOOK_RATING —ñ names. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ª–∞–Ω—Ü—é–∂–æ–∫ –º–µ—Ç–æ–¥—ñ–≤ filter, map, sort.

// const books = [
//   {
//     title: "The Last Kingdom",
//     author: "Bernard Cornwell",
//     rating: 8.38,
//   },
//   {
//     title: "Beside Still Waters",
//     author: "Robert Sheckley",
//     rating: 8.51,
//   },
//   {
//     title: "The Dream of a Ridiculous Man",
//     author: "Fyodor Dostoevsky",
//     rating: 7.75,
//   },
//   { title: "Redder Than Blood", author: "Tanith Lee", rating: 7.94 },
//   {
//     title: "The Dreams in the Witch House",
//     author: "Howard Lovecraft",
//     rating: 8.67,
//   },
// ];
// const MIN_BOOK_RATING = 8;
// // Change code below this line
// // const names = books;

// // // –≤—ñ–¥—ñ–±—Ä–∞—Ç–∏ –∫–Ω–∏–≥–∏ –∑ —Ä–µ–π—Ç–∏–Ω–≥–æ–º –≤–∏—â–µ –∑–∞–¥–∞–Ω–æ–≥–æ
// // const filteredBooks = books.filter(book => (book.rating > MIN_BOOK_RATING));
// // console.log(filteredBooks);

// // // –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º–∞—Å–∏–≤—É —ñ–º–µ–Ω—è –∞–≤—Ç–æ—Ä—ñ–≤
// // const arrayNames = filteredBooks.map(book => book.author);
// // console.log(arrayNames);

// // // –≤—ñ–¥—Å–æ—Ä—Ç—É–≤–∞—Ç–∏ –º–∞—Å–∏–≤ —ñ–º–µ–Ω –∑–∞ –∞–ª—Ñ–∞–≤–∏—Ç–æ–º
// // const namesByAbc = [...arrayNames].sort((firstName, secondName) => firstName.localeCompare(secondName));
// // console.log(namesByAbc);

// const names = books
//   .filter(book => book.rating > MIN_BOOK_RATING)
//   .map(book => book.author)
//   .sort((firstName, secondName) => firstName.localeCompare(secondName));

// console.log(books); // –≤–∏—Ö—ñ–¥–Ω–∏–π –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤
// console.log(names); // ["Bernard Cornwell", "Howard Lovecraft", "Robert Sheckley"]

// // üí° Task 46
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é getNamesSortedByFriendCount(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ —ñ–º–µ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —ó—Ö–Ω—ñ—Ö –¥—Ä—É–∑—ñ–≤ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å friends). –£ —Ç—ñ–ª—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ª–∞–Ω—Ü—é–∂–æ–∫ –º–µ—Ç–æ–¥—ñ–≤. –ó–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è

// // Change code below this line
// // const getNamesSortedByFriendCount = users => {};

// // // —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –¥—Ä—É–∑—ñ–≤ —Å–ø—Ä–µ–¥–æ–º —Ç–∞ –≤—ñ–¥—Å–æ—Ä—Ç—É–≤–∞—Ç–∏ –π–æ–≥–æ –∑–∞ –∫—ñ–ª—å–∫–æ—Å—Ç—å—é –¥—Ä—É–∑—ñ–≤ —Å–æ—Ä—Ç–æ–º
// // const newArray = [...users].sort((firstUser, secondUser) => firstUser.friends.length - secondUser.friends.length)
// // console.log(newArray);

// // // –∑—ñ–±—Ä–∞—Ç–∏ –º–∞—Å–∏–≤ —ñ–º–µ–Ω —é–∑–µ—Ä–æ–≤ –º–µ–ø–æ–º
// // const namesArray = newArray.map(user => user.name);
// // console.log(namesArray);

// const getNamesSortedByFriendCount = users =>
//   [...users]
//     .sort(
//       (firstUser, secondUser) =>
//         firstUser.friends.length - secondUser.friends.length
//     )
//     .map(user => user.name);

// // Change code above this line

// console.log(
//   getNamesSortedByFriendCount([
//     {
//       name: 'Moore Hensley',
//       email: 'moorehensley@indexia.com',
//       eyeColor: 'blue',
//       friends: ['Sharron Pace'],
//       isActive: false,
//       balance: 2811,
//       gender: 'male',
//     },
//     {
//       name: 'Sharlene Bush',
//       email: 'sharlenebush@tubesys.com',
//       eyeColor: 'blue',
//       friends: ['Briana Decker', 'Sharron Pace'],
//       isActive: true,
//       balance: 3821,
//       gender: 'female',
//     },
//     {
//       name: 'Ross Vazquez',
//       email: 'rossvazquez@xinware.com',
//       eyeColor: 'green',
//       friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//       isActive: false,
//       balance: 3793,
//       gender: 'male',
//     },
//     {
//       name: 'Elma Head',
//       email: 'elmahead@omatom.com',
//       eyeColor: 'green',
//       friends: ['Goldie Gentry', 'Aisha Tran'],
//       isActive: true,
//       balance: 2278,
//       gender: 'female',
//     },
//     {
//       name: 'Carey Barr',
//       email: 'careybarr@nurali.com',
//       eyeColor: 'blue',
//       friends: ['Jordan Sampson', 'Eddie Strong', 'Adrian Cross'],
//       isActive: true,
//       balance: 3951,
//       gender: 'male',
//     },
//     {
//       name: 'Blackburn Dotson',
//       email: 'blackburndotson@furnigeer.com',
//       eyeColor: 'brown',
//       friends: [
//         'Jacklyn Lucas',
//         'Linda Chapman',
//         'Adrian Cross',
//         'Solomon Fokes',
//       ],
//       isActive: false,
//       balance: 1498,
//       gender: 'male',
//     },
//     {
//       name: 'Sheree Anthony',
//       email: 'shereeanthony@kog.com',
//       eyeColor: 'brown',
//       friends: ['Goldie Gentry', 'Briana Decker'],
//       isActive: true,
//       balance: 2764,
//       gender: 'female',
//     },
//   ])
// ); // ["Moore Hensley", "Sharlene Bush", "Elma Head", "Sheree Anthony", "Ross Vazquez", "Carey Barr", "Blackburn Dotson"]

// // üí° Task 47
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é getSortedFriends(users) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —ñ–º–µ–Ω –¥—Ä—É–∑—ñ–≤ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å friends), –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ –∞–ª—Ñ–∞–≤—ñ—Ç–æ–º. –£ —Ç—ñ–ª—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ª–∞–Ω—Ü—é–∂–æ–∫ –º–µ—Ç–æ–¥—ñ–≤ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É. –ó–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è.

// // Change code below this line
// // const getSortedFriends = users => {};

// // // –∑—ñ–±—Ä–∞—Ç–∏ –º–∞—Å–∏–≤ –≤—Å—ñ—Ö –¥—Ä—É–∑—ñ–≤ —é–∑–µ—Ä—ñ–≤ —Ñ–ª–µ—Ç-–º–µ–ø–æ–º
// // const allFriends = users.flatMap(user => user.friends)
// // console.log(allFriends);

// // // –∑—ñ–±—Ä–∞—Ç–∏ –º–∞–≤—Å–∏–≤ —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —ñ–º–µ–Ω —Ñ–∏–ª—å—Ç–æ–º
// // const uniqFriends = allFriends.filter((name, idx, arr) => arr.indexOf(name)===idx);
// // console.log(uniqFriends);

// // // –≤—ñ–¥—Å–æ—Ä—Ç—É–≤–∞—Ç–∏ –º–∞—Å–∏–≤ —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —ñ–º–µ–Ω –∑–∞ –∞–ª—Ñ–∞–≤—ñ—Ç–æ–º —Å–æ—Ä—Ç–æ–º
// // const sortFriends = uniqFriends.sort((firstName, SecondName) => firstName.localeCompare(SecondName))
// // console.log(sortFriends);

// const getSortedFriends = users =>
//   users
//     .flatMap(user => user.friends)
//     .filter((name, idx, arr) => arr.indexOf(name) === idx)
//     .sort((firstName, SecondName) => firstName.localeCompare(SecondName));

// // Change code above this line

// console.log(
//   getSortedFriends([
//     {
//       name: 'Moore Hensley',
//       email: 'moorehensley@indexia.com',
//       eyeColor: 'blue',
//       friends: ['Sharron Pace'],
//       isActive: false,
//       balance: 2811,
//       gender: 'male',
//     },
//     {
//       name: 'Sharlene Bush',
//       email: 'sharlenebush@tubesys.com',
//       eyeColor: 'blue',
//       friends: ['Briana Decker', 'Sharron Pace'],
//       isActive: true,
//       balance: 3821,
//       gender: 'female',
//     },
//     {
//       name: 'Ross Vazquez',
//       email: 'rossvazquez@xinware.com',
//       eyeColor: 'green',
//       friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//       isActive: false,
//       balance: 3793,
//       gender: 'male',
//     },
//     {
//       name: 'Elma Head',
//       email: 'elmahead@omatom.com',
//       eyeColor: 'green',
//       friends: ['Goldie Gentry', 'Aisha Tran'],
//       isActive: true,
//       balance: 2278,
//       gender: 'female',
//     },
//     {
//       name: 'Carey Barr',
//       email: 'careybarr@nurali.com',
//       eyeColor: 'blue',
//       friends: ['Jordan Sampson', 'Eddie Strong', 'Adrian Cross'],
//       isActive: true,
//       balance: 3951,
//       gender: 'male',
//     },
//     {
//       name: 'Blackburn Dotson',
//       email: 'blackburndotson@furnigeer.com',
//       eyeColor: 'brown',
//       friends: [
//         'Jacklyn Lucas',
//         'Linda Chapman',
//         'Adrian Cross',
//         'Solomon Fokes',
//       ],
//       isActive: false,
//       balance: 1498,
//       gender: 'male',
//     },
//     {
//       name: 'Sheree Anthony',
//       email: 'shereeanthony@kog.com',
//       eyeColor: 'brown',
//       friends: ['Goldie Gentry', 'Briana Decker'],
//       isActive: true,
//       balance: 2764,
//       gender: 'female',
//     },
//   ])
// ); // ["Adrian Cross", "Aisha Tran", "Briana Decker", "Eddie Strong", "Goldie Gentry", "Jacklyn Lucas", "Jordan Sampson", "Linda Chapman", "Marilyn Mcintosh", "Naomi Buckner", "Padilla Garrison", "Sharron Pace", "Solomon Fokes"]

// // üí° Task 48
// // –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é getTotalBalanceByGender(users, gender) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –∑–∞–≥–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å balance), —Å—Ç–∞—Ç—å —è–∫–∏—Ö (–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å gender) –∑–±—ñ–≥–∞—î—Ç—å—Å—è –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ gender. –£ —Ç—ñ–ª—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ª–∞–Ω—Ü—é–∂–æ–∫ –º–µ—Ç–æ–¥—ñ–≤ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É. –ó–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ users –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è.

// // const users = [
// //   {
// //     name: 'Moore Hensley',
// //     email: 'moorehensley@indexia.com',
// //     eyeColor: 'blue',
// //     friends: ['Sharron Pace'],
// //     isActive: false,
// //     balance: 2811,
// //     gender: 'male',
// //   },
// //   {
// //     name: 'Sharlene Bush',
// //     email: 'sharlenebush@tubesys.com',
// //     eyeColor: 'blue',
// //     friends: ['Briana Decker', 'Sharron Pace'],
// //     isActive: true,
// //     balance: 3821,
// //     gender: 'female',
// //   },
// //   {
// //     name: 'Ross Vazquez',
// //     email: 'rossvazquez@xinware.com',
// //     eyeColor: 'green',
// //     friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
// //     isActive: false,
// //     balance: 3793,
// //     gender: 'male',
// //   },
// //   {
// //     name: 'Elma Head',
// //     email: 'elmahead@omatom.com',
// //     eyeColor: 'green',
// //     friends: ['Goldie Gentry', 'Aisha Tran'],
// //     isActive: true,
// //     balance: 2278,
// //     gender: 'female',
// //   },
// //   {
// //     name: 'Carey Barr',
// //     email: 'careybarr@nurali.com',
// //     eyeColor: 'blue',
// //     friends: ['Jordan Sampson', 'Eddie Strong', 'Adrian Cross'],
// //     isActive: true,
// //     balance: 3951,
// //     gender: 'male',
// //   },
// //   {
// //     name: 'Blackburn Dotson',
// //     email: 'blackburndotson@furnigeer.com',
// //     eyeColor: 'brown',
// //     friends: [
// //       'Jacklyn Lucas',
// //       'Linda Chapman',
// //       'Adrian Cross',
// //       'Solomon Fokes',
// //     ],
// //     isActive: false,
// //     balance: 1498,
// //     gender: 'male',
// //   },
// //   {
// //     name: 'Sheree Anthony',
// //     email: 'shereeanthony@kog.com',
// //     eyeColor: 'brown',
// //     friends: ['Goldie Gentry', 'Briana Decker'],
// //     isActive: true,
// //     balance: 2764,
// //     gender: 'female',
// //   },
// // ];

// // Change code below this line
// // const getTotalBalanceByGender = (users, gender) => {};

// // –≤—ñ–¥—ñ–±—Ä–∞—Ç–∏ –º–∞—Å–∏–≤ –ø–æ –ø—Ä–∏–∑–Ω–∞–∫—É –ø–æ–ª—É —Ñ—ñ–ª—Ç—Ä–æ–º
// // const arrayByGender = users.filter(user => user.gender === 'female')
// // console.log(arrayByGender);

// // // –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –≤ –æ—Ç—Ä–∏–º–∞–Ω–æ–º—É –º–∞—Å–∏–≤—ñ —Ä–µ–¥—É—Å–æ–º
// // const totalBalance = arrayByGender.reduce((total, user) =>  total + user.balance , 0);
// // console.log(totalBalance);

// const getTotalBalanceByGender = (users, gender) =>
//   users
//     .filter(user => user.gender === gender)
//     .reduce((total, user) => total + user.balance, 0);

// //

// // Change code above this line

// console.log(
//   getTotalBalanceByGender(
//     [
//       {
//         name: 'Moore Hensley',
//         email: 'moorehensley@indexia.com',
//         eyeColor: 'blue',
//         friends: ['Sharron Pace'],
//         isActive: false,
//         balance: 2811,
//         gender: 'male',
//       },
//       {
//         name: 'Sharlene Bush',
//         email: 'sharlenebush@tubesys.com',
//         eyeColor: 'blue',
//         friends: ['Briana Decker', 'Sharron Pace'],
//         isActive: true,
//         balance: 3821,
//         gender: 'female',
//       },
//       {
//         name: 'Ross Vazquez',
//         email: 'rossvazquez@xinware.com',
//         eyeColor: 'green',
//         friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//         isActive: false,
//         balance: 3793,
//         gender: 'male',
//       },
//       {
//         name: 'Elma Head',
//         email: 'elmahead@omatom.com',
//         eyeColor: 'green',
//         friends: ['Goldie Gentry', 'Aisha Tran'],
//         isActive: true,
//         balance: 2278,
//         gender: 'female',
//       },
//       {
//         name: 'Carey Barr',
//         email: 'careybarr@nurali.com',
//         eyeColor: 'blue',
//         friends: ['Jordan Sampson', 'Eddie Strong', 'Adrian Cross'],
//         isActive: true,
//         balance: 3951,
//         gender: 'male',
//       },
//       {
//         name: 'Blackburn Dotson',
//         email: 'blackburndotson@furnigeer.com',
//         eyeColor: 'brown',
//         friends: [
//           'Jacklyn Lucas',
//           'Linda Chapman',
//           'Adrian Cross',
//           'Solomon Fokes',
//         ],
//         isActive: false,
//         balance: 1498,
//         gender: 'male',
//       },
//       {
//         name: 'Sheree Anthony',
//         email: 'shereeanthony@kog.com',
//         eyeColor: 'brown',
//         friends: ['Goldie Gentry', 'Briana Decker'],
//         isActive: true,
//         balance: 2764,
//         gender: 'female',
//       },
//     ],
//     'female'
//   )
// ); // "male" - 12053 ; "female" - 8863

// // üìúüìúüìú –ü—Ä–∞–∫—Ç–∏–∫–∞

// // üìú 1
// // –ù–∞–ø–∏—à–∏—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é checkKeyInObject(), —è–∫–∞ –ø—Ä–∏–π–º–∞—î 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ obj —ñ key. –§—É–Ω–∫—Ü—è –ø–µ—Ä–µ–±—Ñ—Ä–∞—î –æ–±'—î–∫—Ç. –Ø–∫—â–æ –æ–±'—î–∫—Ç –º–∞—î —Ç–∞–∫–∏–π –∫–ª—é—á - –ø–æ–≤—Ä–µ—Ç–∞—î true –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É - false.

// const user = {
//   name: 'Vitalii',
//   car: 'Nissan',
//   carColor: 'beige',
// };

// // –≤–∞—Ä 1
// function checkKeyInObject(obj, keyForFind) {
//   for (const key in obj) {
//     if (key === keyForFind) {
//       return true;
//     }
//   }
//   return false;
// }

// // –≤–∞—Ä 2
// function checkKeyInObject(obj, keyForFind) {
//   const allKeys = Object.keys(obj);
//   if (allKeys.includes(keyForFind)) {
//     return true;
//   }
//   return false;
// }

// // –≤–∞—Ä 3
// function checkKeyInObject(obj, keyForFind) {
//   if (Object.keys(obj).includes(keyForFind)) {
//     return true;
//   }
//   return false;
// }

// // –≤–∞—Ä 4
// function checkKeyInObject(obj, keyForFind) {
//   return Object.keys(obj).includes(keyForFind) ? true : false;
// }

// // –≤–∞—Ä 5
// function checkKeyInObject(obj, keyForFind) {
//   return Object.keys(obj).includes(keyForFind);
// }

// // checkKeyInObject(user, 'car');
// console.log(checkKeyInObject(user,'car'));

// // üìú 2
// // –î–æ–¥–∞—Ç–∏ –º–µ—Ç–æ–¥ getInfo –≤ –æ–±'—î–∫—Ç user, —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏–º–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É —Ñ–æ—Ä–º–∞—Ç—ñ:
// // 'Name: Peter. Surname: Parker. Age: 22. Position: spider-man.'

// const user = {
//   name: 'Peter',
//   surname: 'Parker',
//   age: 22,
//   position: 'spider-man',
// };

// user.getInfo = function () {
//     return `Name: ${this.name}. Surname: ${this.surname}. Age: ${this.age}. Position: ${this.position}.`;
// };

// console.log(user.getInfo());

// // üìú 3
// // –°—Ç–≤–æ—Ä–∏—Ç—å –æ–±'—î–∫—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∑ —Ç—Ä—å–æ–º–∞ –º–µ—Ç–æ–¥–∞–º–∏:
// // read (a, b) - –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —Ç–∞ –∑–±–µ—Ä—ñ–≥–∞—î —ó—Ö —è–∫ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –æ–±'—î–∫—Ç–∞;
// // sum() - –ø–æ–≤–µ—Ä—Ç–∞—î —Å—É–º—É –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å;
// // mult() - –ø–µ—Ä–µ–º–Ω–æ–∂—É—î –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç

// // const calc = {
// //   read(a, b) {
// //     this.a = a;
// //     this.b = b;
// //   },

// //   sum() {
// //     return this.a + this.b;
// //   },

// //   mult() {
// //     return this.a * this.b;
// //   },
// // };

// // calc.read(2, 3);
// // console.log(calc.sum());
// // console.log(calc.mult());

// const calc = {
//   read(a, b) {
//     this.a = a;
//     this.b = b;
//   },

//   sum(a, b) {
//     this.read(a, b);
//     return this.a + this.b;
//   },

//   mult(a, b) {
//     this.read(a, b);
//     return this.a * this.b;
//   },
// };

// console.log(calc.sum(3, 5));
// console.log(calc.mult(3, 5));

// // üìú 4
// // –ù–∞–ø–∏—à–∏—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é upduteObject, —è–∫–∞ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —ñ –∫–ª—é—á—ñ (–∫–ª—é—á—ñ–≤ –º–æ–∂–µ –±—É—Ç–∏ –¥–æ–≤—ñ–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å), —è–∫–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑ –æ–±'–µ–∫—Ç—É. –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –æ–±'—î–∫—Ç –±–µ–∑ –∑–∞–∑–Ω–∞—á–µ–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
// // ({a:1, b:2}, 'b') => {a:1}

// const upduteObject = (obj, ...keys) => {
//   // const newObj = Object.assign({}, obj);
//     const newObj = { ...obj };
//     keys.forEach(element => delete newObj[element]);
//     return newObj;
// }

// console.log(upduteObject({ a: 1, b: 2, c:3, d:4 }, 'b', 'd'));

// // üìú 5
// // –ù–∞–ø–∏—à–∏—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä –æ–±'—î–∫—Ç —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∑–Ω–∞—á–µ–Ω—å —É —Ñ–æ—Ä–º–∞—Ç—ñ [[key, value], [key, value], ...].

// const user = {
//   name: 'Peter',
//   surname: 'Parker',
//   age: 22,
//   position: 'spider-man',
// };

// function foo(obj) {
//     return Object.entries(obj);
// }

// console.log(foo(user))

// // üìú 6
// // –ù–∞–ø–∏—à–∏—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é getPropertyValues(), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ —Ç–∞ –∫–ª—é—á, —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∑–Ω–∞—á–µ–Ω—å —Ü—å–æ–≥–æ –∫–ª—é—á–∞ —É –∫–æ–∂–Ω–æ–º—É –æ–±'–µ–∫—Ç—ñ.

// const myArr = [
//   { name: 'John', age: 38 },
//   { name: 'Jane', age: 29 },
//   { name: 'Bob', age: 25 },
//   { name: 'Max', age: 40 },
// ];

// // function getPropertyValues(arr, key) {
// //   const values = [];
// //   for (const elem of arr) {
// //     values.push(elem[key]);
// //   }
// //   return values;
// // }

// function getPropertyValues(arr, key) {
//   const values = arr.map(item => item[key]);

//   return values;
// }

// console.log(getPropertyValues(myArr, 'age'));

// // üìú 7
// // –í–∏–∫–æ–Ω–∞–π—Ç–µ —Å–º–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —Ü—ñ–Ω –∑–∞ —Å–ø–∞–¥—ñ–Ω–Ω—è–º —Ç–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º
// const prices = [1000, 240, 670, 360, 89, 20];
// const ascendingPrices = [...prices].sort((a, b) => a - b);
// console.log(ascendingPrices)
// const descendingPrices = [...prices].sort((a, b) => b - a);
// console.log(descendingPrices)

// // üìú 8
// // –ù–∞–ø–∏—à–∏—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é sayHi(), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –≤ —è–∫–æ—Å—Ç—ñ –ø–∞—Ä–∞–µ–º–µ—Ç—Ä–∞ –º–∞—Å–∏–≤ —ñ–º–µ–Ω, –ø–µ—Ä–µ–±–∏—Ä–∞—î –º–∞—Å–∏–≤ —ñ –¥–æ–¥–∞—î –¥–æ –∫–æ–∂–Ω–æ–≥–æ —ñ–º'—è –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —Ç–∏–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ ['Ivan, –ø—Ä–∏–≤—ñ—Ç!', 'Maria, –ø—Ä–∏–≤—ñ—Ç!', 'Anna, –ø—Ä–∏–≤—ñ—Ç!']
// const names = ['Ivan', 'Maria', 'Anna'];
// function sayHi(arr) {
//   const arr0 = [];
//   for (let name of names) {
//     arr0.push(`${name}, –ø—Ä–∏–≤—ñ—Ç!`);
//   }
//   console.log(arr0);
// }
// sayHi(names);

// const names = ['Ivan', 'Maria', 'Anna'];
// function sayHi(arr) {
//   // const arr0 = arr.map(name => name + ', –ø—Ä–∏–≤—ñ—Ç!');
//   const arr0 = arr.map(name => `${name}, –ø—Ä–∏–≤—ñ—Ç!`);
//   console.log(arr0);
// }
// sayHi(names);

// // üìú 9
// // –ù–∞–ø–∏—à–∏—Ç—å —Å—Ç—Ä—ñ–ª–æ—á–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é–± —è–∫–∞ –±—É–¥–µ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —á–∏ –º—ñ—Å—Ç–∏—Ç—å –º–∞—Å–∏–≤ —Ö–æ—á–∞ –± –æ–¥–Ω–µ —á–∏—Å–ª–æ –±—ñ–ª—å—à–µ 20.
// const numbers = [20, 16, 11, 13, 15, 21];
// const res = numbers.some(number => number > 20);

// console.log(res);

// // üìú 10
// // –ù–∞–ø–∏—à–∏—Ç—å —Å—Ç—Ä—ñ–ª–æ—á–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —á–∏ –≤—Å—ñ —Å—Ç—É–¥–µ–Ω—Ç–∏ —É –º–∞—Å–∏–≤—ñ —Å—Ç–∞—Ä—à–∏ 18 —Ä–æ–∫—ñ–≤.
// const students = [
//   { name: 'John', age: 19 },
//   { name: 'Jane', age: 19 },
//   { name: 'Bob', age: 22 },
//   { name: 'Max', age: 20 },
// ];

// const res = students.every(student => student.age > 18);
// console.log(res);

// // üìú 11
// // –ó—ñ–±—Ä–∞—Ç–∏ –≤ allTopics –º–∞—Å–∏–≤ –≤—Å—ñ—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –≤—Å—ñ—Ö –∫—É—Ä—Å—ñ–≤. –í–∏–∫–æ–Ω–∞—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—é, –∑–∞–ª–∏—à–∏–≤—à–∏ –≤ allTopics —Ç—ñ–ª—å–∫–∏ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏.

// const courses = [
//   {
//     name: 'Basic HTML + CSS',
//     topics: ['VSCode', 'HTML', 'CSS', 'GitHub', 'GitHubDesctop'],
//   },
//   {
//     name: 'Intermediate HTML + CSS',
//     topics: ['VSCode', 'HTML', 'CSS', 'GitHub', 'Git', 'Terminal'],
//   },
//   {
//     name: 'Basic JavaScript',
//     topics: [
//       'VSCode',
//       'Type system',
//       'Loops',
//       'Function',
//       'Git',
//       'Conditions',
//       'Classes',
//       'GitHub',
//       'DOM',
//     ],
//   },
//   {
//     name: 'Intermediate JavaScript',
//     topics: [
//       'VSCode',
//       'NPM',
//       'Bundlers',
//       'Transpiling',
//       'Git',
//       'Promises',
//       'AJAX',
//       'GitHub',
//     ],
//   },
// ];

// // function collectAllTopics(arr) {
// //     const topics = arr.flatMap(course => course.topics);
// //     const allTopics = topics.filter((el, idx, arr) => arr.indexOf(el) === idx);
// //     console.log(allTopics);
// // }
// // collectAllTopics(courses);

//   const allTopics = courses
//     .flatMap(course => course.topics)
//     .filter((el, idx, arr) => arr.indexOf(el) === idx);
//   console.log(allTopics);

// // üìú 12
// // –£ –Ω–∞—Å —î –º–∞—Å–∏–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, –∫–æ–∂–µ–Ω –∑ —è–∫–∏—Ö –º–∞—î –ø–æ–ª–µ id —Ç–∞ name. –ó–Ω–∞–π—Ç–∏ —Ç–æ–π, –¥–µ id = 1.

// const users = [
//   { id: 1, name: 'John' },
//   { id: 2, name: 'Pete' },
//   { id: 3, name: 'Mary' },
// ];

// function checkId(arr) {
//         // const resName = arr.find(user => user.id === 1);
//         // console.log(resName.name);
//     console.log(arr.find(user => user.id === 1).name);
// }
// checkId(users);

// // üìú 13
// // –ù–∞–ø–∏—à–∏—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é getTotalBoysYears() —è–∫–∞ –ø–æ—Ä–∞—Ö—É—î –∑–∞–≥–∞–ª—å–Ω–∏–π –≤—ñ–∫ —Ö–ª–æ–ø—Ü—ñ–≤

// const friends = [
//   { passport: '123', name: 'John', age: 22, sex: 'm' },
//   { passport: '234', name: 'Bob', age: 28, sex: 'm' },
//   { passport: '345', name: 'Max', age: 39, sex: 'm' },
//   { passport: '456', name: 'Mary', age: 24, sex: 'f' },
//   { passport: '567', name: 'Anna', age: 35, sex: 'f' },
//   { passport: '678', name: 'Monica', age: 34, sex: 'f' },
// ];

// function getTotalBoysYears(arr) {
// //   const boys = arr.filter(friend => friend.sex === 'm');
// //   const totalBoysYears = boys.reduce((total, boy) => total + boy.age, 0);
//     //   return totalBoysYears;
//       return arr
//         .filter(friend => friend.sex === 'm')
//         .reduce((total, friend) => total + friend.age, 0);
// }
// console.log(getTotalBoysYears(friends));

// // üìú 14
// // –ú–∞—î–º–æ –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤, —è–∫–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î —Å–ø–∏—Å–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å. –ü–µ—Ä–µ–≤—ñ—Ä—å—Ç–µ, —á–∏ –≤—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω—ñ —Ç–∞ –ø–æ–≤–µ—Ä–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ –∑ —É—Å—ñ—Ö –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å.

// const orders = [
//   { id: 1, products: ['Milk', 'Bread'], status: 'complited' },
//   { id: 2, products: ['Eggs', 'Juice'], status: 'processing' },
//   {
//     id: 3,
//     products: ['Pasta', 'Spices', 'Milk', 'Bread'],
//     status: 'complited',
//   },
// ];

// const complited = orders.every(order => order.status === 'complited');
// console.log(complited);

// const products = orders
//   .filter(order => order.status === 'complited')
//   .flatMap(order => order.products)
//   .filter((el, idx, arr) => arr.indexOf(el) === idx);
// console.log(products);

// // üìú 15
// // –ú–∞—î–º–æ –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤, —è–∫–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –ø–µ—Ä–µ–ª—ñ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —Ç–∞ —ó—Ö —Ü—ñ–Ω. –ü–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω–∞–π  —Ç–∏ —Å–º—É–º—É –≤–∞—Ä—Ç–æ—Å—Ç—ñ –≤—Å—ñ—Ö —Ç–æ–≤–∞—Ä—ñ–≤–± —è–∫–∏ –∫–æ—à—Ç—É—é—Ç—å –±—ñ–ª—å—à–µ 10.
// const products = [
//   { name: 'Milk', price: 20 },
//   { name: 'Bread', price: 10 },
//   { name: 'Eggs', price: 15 },
// ];

// const total = products
//   .filter(product => product.price > 10)
//   .reduce((acc, product) => acc + product.price, 0);
// console.log(total);
